// source: server/v1/observability.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_api_annotations_pb = require('../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var openapiv3_annotations_pb = require('../../openapiv3/annotations_pb.js');
goog.object.extend(proto, openapiv3_annotations_pb);
goog.exportSymbol('proto.tigrisdata.observability.v1.AdditionalFunction', null, global);
goog.exportSymbol('proto.tigrisdata.observability.v1.DataPoint', null, global);
goog.exportSymbol('proto.tigrisdata.observability.v1.MetricQueryFunction', null, global);
goog.exportSymbol('proto.tigrisdata.observability.v1.MetricQuerySpaceAggregation', null, global);
goog.exportSymbol('proto.tigrisdata.observability.v1.MetricSeries', null, global);
goog.exportSymbol('proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest', null, global);
goog.exportSymbol('proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsResponse', null, global);
goog.exportSymbol('proto.tigrisdata.observability.v1.RollupAggregator', null, global);
goog.exportSymbol('proto.tigrisdata.observability.v1.RollupFunction', null, global);
goog.exportSymbol('proto.tigrisdata.observability.v1.TigrisOperation', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest.repeatedFields_, null);
};
goog.inherits(proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest.displayName = 'proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.observability.v1.AdditionalFunction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.observability.v1.AdditionalFunction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.observability.v1.AdditionalFunction.displayName = 'proto.tigrisdata.observability.v1.AdditionalFunction';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.observability.v1.RollupFunction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.observability.v1.RollupFunction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.observability.v1.RollupFunction.displayName = 'proto.tigrisdata.observability.v1.RollupFunction';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsResponse.repeatedFields_, null);
};
goog.inherits(proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsResponse.displayName = 'proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.observability.v1.MetricSeries = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tigrisdata.observability.v1.MetricSeries.repeatedFields_, null);
};
goog.inherits(proto.tigrisdata.observability.v1.MetricSeries, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.observability.v1.MetricSeries.displayName = 'proto.tigrisdata.observability.v1.MetricSeries';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.observability.v1.DataPoint = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.observability.v1.DataPoint, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.observability.v1.DataPoint.displayName = 'proto.tigrisdata.observability.v1.DataPoint';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest.repeatedFields_ = [8,11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    db: jspb.Message.getFieldWithDefault(msg, 1, ""),
    collection: jspb.Message.getFieldWithDefault(msg, 2, ""),
    from: jspb.Message.getFieldWithDefault(msg, 3, 0),
    to: jspb.Message.getFieldWithDefault(msg, 4, 0),
    metricName: jspb.Message.getFieldWithDefault(msg, 5, ""),
    tigrisOperation: jspb.Message.getFieldWithDefault(msg, 6, 0),
    spaceAggregation: jspb.Message.getFieldWithDefault(msg, 7, 0),
    spaceAggregatedByList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f,
    pb_function: jspb.Message.getFieldWithDefault(msg, 9, 0),
    quantile: jspb.Message.getFloatingPointFieldWithDefault(msg, 10, 0.0),
    additionalfunctionsList: jspb.Message.toObjectList(msg.getAdditionalfunctionsList(),
    proto.tigrisdata.observability.v1.AdditionalFunction.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest}
 */
proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest;
  return proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest}
 */
proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDb(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollection(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFrom(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTo(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setMetricName(value);
      break;
    case 6:
      var value = /** @type {!proto.tigrisdata.observability.v1.TigrisOperation} */ (reader.readEnum());
      msg.setTigrisOperation(value);
      break;
    case 7:
      var value = /** @type {!proto.tigrisdata.observability.v1.MetricQuerySpaceAggregation} */ (reader.readEnum());
      msg.setSpaceAggregation(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.addSpaceAggregatedBy(value);
      break;
    case 9:
      var value = /** @type {!proto.tigrisdata.observability.v1.MetricQueryFunction} */ (reader.readEnum());
      msg.setFunction(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setQuantile(value);
      break;
    case 11:
      var value = new proto.tigrisdata.observability.v1.AdditionalFunction;
      reader.readMessage(value,proto.tigrisdata.observability.v1.AdditionalFunction.deserializeBinaryFromReader);
      msg.addAdditionalfunctions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDb();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCollection();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFrom();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getTo();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getMetricName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTigrisOperation();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getSpaceAggregation();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getSpaceAggregatedByList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f
    );
  }
  f = message.getFunction();
  if (f !== 0.0) {
    writer.writeEnum(
      9,
      f
    );
  }
  f = message.getQuantile();
  if (f !== 0.0) {
    writer.writeFloat(
      10,
      f
    );
  }
  f = message.getAdditionalfunctionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      proto.tigrisdata.observability.v1.AdditionalFunction.serializeBinaryToWriter
    );
  }
};


/**
 * optional string db = 1;
 * @return {string}
 */
proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest.prototype.getDb = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest} returns this
 */
proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest.prototype.setDb = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string collection = 2;
 * @return {string}
 */
proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest.prototype.getCollection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest} returns this
 */
proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest.prototype.setCollection = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 from = 3;
 * @return {number}
 */
proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest.prototype.getFrom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest} returns this
 */
proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest.prototype.setFrom = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 to = 4;
 * @return {number}
 */
proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest.prototype.getTo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest} returns this
 */
proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest.prototype.setTo = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string metric_name = 5;
 * @return {string}
 */
proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest.prototype.getMetricName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest} returns this
 */
proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest.prototype.setMetricName = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional TigrisOperation tigris_operation = 6;
 * @return {!proto.tigrisdata.observability.v1.TigrisOperation}
 */
proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest.prototype.getTigrisOperation = function() {
  return /** @type {!proto.tigrisdata.observability.v1.TigrisOperation} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.tigrisdata.observability.v1.TigrisOperation} value
 * @return {!proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest} returns this
 */
proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest.prototype.setTigrisOperation = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional MetricQuerySpaceAggregation space_aggregation = 7;
 * @return {!proto.tigrisdata.observability.v1.MetricQuerySpaceAggregation}
 */
proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest.prototype.getSpaceAggregation = function() {
  return /** @type {!proto.tigrisdata.observability.v1.MetricQuerySpaceAggregation} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.tigrisdata.observability.v1.MetricQuerySpaceAggregation} value
 * @return {!proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest} returns this
 */
proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest.prototype.setSpaceAggregation = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * repeated string space_aggregated_by = 8;
 * @return {!Array<string>}
 */
proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest.prototype.getSpaceAggregatedByList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest} returns this
 */
proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest.prototype.setSpaceAggregatedByList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest} returns this
 */
proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest.prototype.addSpaceAggregatedBy = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest} returns this
 */
proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest.prototype.clearSpaceAggregatedByList = function() {
  return this.setSpaceAggregatedByList([]);
};


/**
 * optional MetricQueryFunction function = 9;
 * @return {!proto.tigrisdata.observability.v1.MetricQueryFunction}
 */
proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest.prototype.getFunction = function() {
  return /** @type {!proto.tigrisdata.observability.v1.MetricQueryFunction} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {!proto.tigrisdata.observability.v1.MetricQueryFunction} value
 * @return {!proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest} returns this
 */
proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest.prototype.setFunction = function(value) {
  return jspb.Message.setProto3EnumField(this, 9, value);
};


/**
 * optional float quantile = 10;
 * @return {number}
 */
proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest.prototype.getQuantile = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest} returns this
 */
proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest.prototype.setQuantile = function(value) {
  return jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * repeated AdditionalFunction additionalFunctions = 11;
 * @return {!Array<!proto.tigrisdata.observability.v1.AdditionalFunction>}
 */
proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest.prototype.getAdditionalfunctionsList = function() {
  return /** @type{!Array<!proto.tigrisdata.observability.v1.AdditionalFunction>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tigrisdata.observability.v1.AdditionalFunction, 11));
};


/**
 * @param {!Array<!proto.tigrisdata.observability.v1.AdditionalFunction>} value
 * @return {!proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest} returns this
*/
proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest.prototype.setAdditionalfunctionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.tigrisdata.observability.v1.AdditionalFunction=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tigrisdata.observability.v1.AdditionalFunction}
 */
proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest.prototype.addAdditionalfunctions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.tigrisdata.observability.v1.AdditionalFunction, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest} returns this
 */
proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsRequest.prototype.clearAdditionalfunctionsList = function() {
  return this.setAdditionalfunctionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.observability.v1.AdditionalFunction.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.observability.v1.AdditionalFunction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.observability.v1.AdditionalFunction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.observability.v1.AdditionalFunction.toObject = function(includeInstance, msg) {
  var f, obj = {
    rollup: (f = msg.getRollup()) && proto.tigrisdata.observability.v1.RollupFunction.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.observability.v1.AdditionalFunction}
 */
proto.tigrisdata.observability.v1.AdditionalFunction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.observability.v1.AdditionalFunction;
  return proto.tigrisdata.observability.v1.AdditionalFunction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.observability.v1.AdditionalFunction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.observability.v1.AdditionalFunction}
 */
proto.tigrisdata.observability.v1.AdditionalFunction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tigrisdata.observability.v1.RollupFunction;
      reader.readMessage(value,proto.tigrisdata.observability.v1.RollupFunction.deserializeBinaryFromReader);
      msg.setRollup(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.observability.v1.AdditionalFunction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.observability.v1.AdditionalFunction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.observability.v1.AdditionalFunction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.observability.v1.AdditionalFunction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRollup();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.tigrisdata.observability.v1.RollupFunction.serializeBinaryToWriter
    );
  }
};


/**
 * optional RollupFunction rollup = 1;
 * @return {?proto.tigrisdata.observability.v1.RollupFunction}
 */
proto.tigrisdata.observability.v1.AdditionalFunction.prototype.getRollup = function() {
  return /** @type{?proto.tigrisdata.observability.v1.RollupFunction} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.observability.v1.RollupFunction, 1));
};


/**
 * @param {?proto.tigrisdata.observability.v1.RollupFunction|undefined} value
 * @return {!proto.tigrisdata.observability.v1.AdditionalFunction} returns this
*/
proto.tigrisdata.observability.v1.AdditionalFunction.prototype.setRollup = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.observability.v1.AdditionalFunction} returns this
 */
proto.tigrisdata.observability.v1.AdditionalFunction.prototype.clearRollup = function() {
  return this.setRollup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.observability.v1.AdditionalFunction.prototype.hasRollup = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.observability.v1.RollupFunction.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.observability.v1.RollupFunction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.observability.v1.RollupFunction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.observability.v1.RollupFunction.toObject = function(includeInstance, msg) {
  var f, obj = {
    aggregator: jspb.Message.getFieldWithDefault(msg, 1, 0),
    interval: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.observability.v1.RollupFunction}
 */
proto.tigrisdata.observability.v1.RollupFunction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.observability.v1.RollupFunction;
  return proto.tigrisdata.observability.v1.RollupFunction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.observability.v1.RollupFunction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.observability.v1.RollupFunction}
 */
proto.tigrisdata.observability.v1.RollupFunction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.tigrisdata.observability.v1.RollupAggregator} */ (reader.readEnum());
      msg.setAggregator(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setInterval(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.observability.v1.RollupFunction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.observability.v1.RollupFunction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.observability.v1.RollupFunction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.observability.v1.RollupFunction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAggregator();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getInterval();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional RollupAggregator aggregator = 1;
 * @return {!proto.tigrisdata.observability.v1.RollupAggregator}
 */
proto.tigrisdata.observability.v1.RollupFunction.prototype.getAggregator = function() {
  return /** @type {!proto.tigrisdata.observability.v1.RollupAggregator} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.tigrisdata.observability.v1.RollupAggregator} value
 * @return {!proto.tigrisdata.observability.v1.RollupFunction} returns this
 */
proto.tigrisdata.observability.v1.RollupFunction.prototype.setAggregator = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional int64 interval = 2;
 * @return {number}
 */
proto.tigrisdata.observability.v1.RollupFunction.prototype.getInterval = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.tigrisdata.observability.v1.RollupFunction} returns this
 */
proto.tigrisdata.observability.v1.RollupFunction.prototype.setInterval = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsResponse.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    from: jspb.Message.getFieldWithDefault(msg, 1, 0),
    to: jspb.Message.getFieldWithDefault(msg, 2, 0),
    query: jspb.Message.getFieldWithDefault(msg, 3, ""),
    seriesList: jspb.Message.toObjectList(msg.getSeriesList(),
    proto.tigrisdata.observability.v1.MetricSeries.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsResponse}
 */
proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsResponse;
  return proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsResponse}
 */
proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFrom(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTo(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuery(value);
      break;
    case 4:
      var value = new proto.tigrisdata.observability.v1.MetricSeries;
      reader.readMessage(value,proto.tigrisdata.observability.v1.MetricSeries.deserializeBinaryFromReader);
      msg.addSeries(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFrom();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getTo();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getQuery();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSeriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.tigrisdata.observability.v1.MetricSeries.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 from = 1;
 * @return {number}
 */
proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsResponse.prototype.getFrom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsResponse} returns this
 */
proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsResponse.prototype.setFrom = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 to = 2;
 * @return {number}
 */
proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsResponse.prototype.getTo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsResponse} returns this
 */
proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsResponse.prototype.setTo = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string query = 3;
 * @return {string}
 */
proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsResponse.prototype.getQuery = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsResponse} returns this
 */
proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsResponse.prototype.setQuery = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated MetricSeries series = 4;
 * @return {!Array<!proto.tigrisdata.observability.v1.MetricSeries>}
 */
proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsResponse.prototype.getSeriesList = function() {
  return /** @type{!Array<!proto.tigrisdata.observability.v1.MetricSeries>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tigrisdata.observability.v1.MetricSeries, 4));
};


/**
 * @param {!Array<!proto.tigrisdata.observability.v1.MetricSeries>} value
 * @return {!proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsResponse} returns this
*/
proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsResponse.prototype.setSeriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.tigrisdata.observability.v1.MetricSeries=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tigrisdata.observability.v1.MetricSeries}
 */
proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsResponse.prototype.addSeries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.tigrisdata.observability.v1.MetricSeries, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsResponse} returns this
 */
proto.tigrisdata.observability.v1.QueryTimeSeriesMetricsResponse.prototype.clearSeriesList = function() {
  return this.setSeriesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tigrisdata.observability.v1.MetricSeries.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.observability.v1.MetricSeries.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.observability.v1.MetricSeries.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.observability.v1.MetricSeries} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.observability.v1.MetricSeries.toObject = function(includeInstance, msg) {
  var f, obj = {
    from: jspb.Message.getFieldWithDefault(msg, 1, 0),
    to: jspb.Message.getFieldWithDefault(msg, 2, 0),
    metric: jspb.Message.getFieldWithDefault(msg, 3, ""),
    scope: jspb.Message.getFieldWithDefault(msg, 4, ""),
    datapointsList: jspb.Message.toObjectList(msg.getDatapointsList(),
    proto.tigrisdata.observability.v1.DataPoint.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.observability.v1.MetricSeries}
 */
proto.tigrisdata.observability.v1.MetricSeries.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.observability.v1.MetricSeries;
  return proto.tigrisdata.observability.v1.MetricSeries.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.observability.v1.MetricSeries} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.observability.v1.MetricSeries}
 */
proto.tigrisdata.observability.v1.MetricSeries.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFrom(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTo(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMetric(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setScope(value);
      break;
    case 5:
      var value = new proto.tigrisdata.observability.v1.DataPoint;
      reader.readMessage(value,proto.tigrisdata.observability.v1.DataPoint.deserializeBinaryFromReader);
      msg.addDatapoints(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.observability.v1.MetricSeries.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.observability.v1.MetricSeries.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.observability.v1.MetricSeries} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.observability.v1.MetricSeries.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFrom();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getTo();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getMetric();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getScope();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDatapointsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.tigrisdata.observability.v1.DataPoint.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 from = 1;
 * @return {number}
 */
proto.tigrisdata.observability.v1.MetricSeries.prototype.getFrom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.tigrisdata.observability.v1.MetricSeries} returns this
 */
proto.tigrisdata.observability.v1.MetricSeries.prototype.setFrom = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 to = 2;
 * @return {number}
 */
proto.tigrisdata.observability.v1.MetricSeries.prototype.getTo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.tigrisdata.observability.v1.MetricSeries} returns this
 */
proto.tigrisdata.observability.v1.MetricSeries.prototype.setTo = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string metric = 3;
 * @return {string}
 */
proto.tigrisdata.observability.v1.MetricSeries.prototype.getMetric = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.observability.v1.MetricSeries} returns this
 */
proto.tigrisdata.observability.v1.MetricSeries.prototype.setMetric = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string scope = 4;
 * @return {string}
 */
proto.tigrisdata.observability.v1.MetricSeries.prototype.getScope = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.observability.v1.MetricSeries} returns this
 */
proto.tigrisdata.observability.v1.MetricSeries.prototype.setScope = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated DataPoint dataPoints = 5;
 * @return {!Array<!proto.tigrisdata.observability.v1.DataPoint>}
 */
proto.tigrisdata.observability.v1.MetricSeries.prototype.getDatapointsList = function() {
  return /** @type{!Array<!proto.tigrisdata.observability.v1.DataPoint>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tigrisdata.observability.v1.DataPoint, 5));
};


/**
 * @param {!Array<!proto.tigrisdata.observability.v1.DataPoint>} value
 * @return {!proto.tigrisdata.observability.v1.MetricSeries} returns this
*/
proto.tigrisdata.observability.v1.MetricSeries.prototype.setDatapointsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.tigrisdata.observability.v1.DataPoint=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tigrisdata.observability.v1.DataPoint}
 */
proto.tigrisdata.observability.v1.MetricSeries.prototype.addDatapoints = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.tigrisdata.observability.v1.DataPoint, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tigrisdata.observability.v1.MetricSeries} returns this
 */
proto.tigrisdata.observability.v1.MetricSeries.prototype.clearDatapointsList = function() {
  return this.setDatapointsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.observability.v1.DataPoint.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.observability.v1.DataPoint.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.observability.v1.DataPoint} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.observability.v1.DataPoint.toObject = function(includeInstance, msg) {
  var f, obj = {
    timestamp: jspb.Message.getFieldWithDefault(msg, 1, 0),
    value: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.observability.v1.DataPoint}
 */
proto.tigrisdata.observability.v1.DataPoint.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.observability.v1.DataPoint;
  return proto.tigrisdata.observability.v1.DataPoint.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.observability.v1.DataPoint} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.observability.v1.DataPoint}
 */
proto.tigrisdata.observability.v1.DataPoint.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.observability.v1.DataPoint.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.observability.v1.DataPoint.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.observability.v1.DataPoint} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.observability.v1.DataPoint.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getValue();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional int64 timestamp = 1;
 * @return {number}
 */
proto.tigrisdata.observability.v1.DataPoint.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.tigrisdata.observability.v1.DataPoint} returns this
 */
proto.tigrisdata.observability.v1.DataPoint.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional double value = 2;
 * @return {number}
 */
proto.tigrisdata.observability.v1.DataPoint.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.tigrisdata.observability.v1.DataPoint} returns this
 */
proto.tigrisdata.observability.v1.DataPoint.prototype.setValue = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * @enum {number}
 */
proto.tigrisdata.observability.v1.TigrisOperation = {
  ALL: 0,
  READ: 1,
  WRITE: 2
};

/**
 * @enum {number}
 */
proto.tigrisdata.observability.v1.MetricQueryFunction = {
  RATE: 0,
  COUNT: 1,
  NONE: 2
};

/**
 * @enum {number}
 */
proto.tigrisdata.observability.v1.RollupAggregator = {
  ROLLUP_AGGREGATOR_SUM: 0,
  ROLLUP_AGGREGATOR_COUNT: 1,
  ROLLUP_AGGREGATOR_MIN: 2,
  ROLLUP_AGGREGATOR_MAX: 3,
  ROLLUP_AGGREGATOR_AVG: 4
};

/**
 * @enum {number}
 */
proto.tigrisdata.observability.v1.MetricQuerySpaceAggregation = {
  AVG: 0,
  MIN: 1,
  MAX: 2,
  SUM: 3
};

goog.object.extend(exports, proto.tigrisdata.observability.v1);
