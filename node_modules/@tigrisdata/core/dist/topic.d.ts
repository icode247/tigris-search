import { TigrisClient } from "./proto/server/v1/api_grpc_pb";
import { PublishOptions, TigrisTopicType } from "./types";
export interface SubscribeCallback<T> {
    onNext(message: T): void;
    onEnd(): void;
    onError(error: Error): void;
}
export declare class Topic<T extends TigrisTopicType> {
    private readonly _topicName;
    private readonly _db;
    private readonly _grpcClient;
    constructor(topicName: string, db: string, grpcClient: TigrisClient);
    get topicName(): string;
    publishMany(_options?: PublishOptions, ...messages: Array<T>): Promise<Array<T>>;
    publish(message: T, options?: PublishOptions): Promise<T>;
    subscribe(callback: SubscribeCallback<T>): void;
}
