// package: tigrisdata.auth.v1
// file: server/v1/auth.proto

/* tslint:disable */
/* eslint-disable */

import * as grpc from "@grpc/grpc-js";
import * as server_v1_auth_pb from "../../server/v1/auth_pb";
import * as openapiv3_annotations_pb from "../../openapiv3/annotations_pb";

interface IAuthService extends grpc.ServiceDefinition<grpc.UntypedServiceImplementation> {
    getAccessToken: IAuthService_IgetAccessToken;
    createApplication: IAuthService_IcreateApplication;
    deleteApplication: IAuthService_IdeleteApplication;
    listApplications: IAuthService_IlistApplications;
    rotateApplicationSecret: IAuthService_IrotateApplicationSecret;
}

interface IAuthService_IgetAccessToken extends grpc.MethodDefinition<server_v1_auth_pb.GetAccessTokenRequest, server_v1_auth_pb.GetAccessTokenResponse> {
    path: "/tigrisdata.auth.v1.Auth/getAccessToken";
    requestStream: false;
    responseStream: false;
    requestSerialize: grpc.serialize<server_v1_auth_pb.GetAccessTokenRequest>;
    requestDeserialize: grpc.deserialize<server_v1_auth_pb.GetAccessTokenRequest>;
    responseSerialize: grpc.serialize<server_v1_auth_pb.GetAccessTokenResponse>;
    responseDeserialize: grpc.deserialize<server_v1_auth_pb.GetAccessTokenResponse>;
}
interface IAuthService_IcreateApplication extends grpc.MethodDefinition<server_v1_auth_pb.CreateApplicationRequest, server_v1_auth_pb.CreateApplicationResponse> {
    path: "/tigrisdata.auth.v1.Auth/createApplication";
    requestStream: false;
    responseStream: false;
    requestSerialize: grpc.serialize<server_v1_auth_pb.CreateApplicationRequest>;
    requestDeserialize: grpc.deserialize<server_v1_auth_pb.CreateApplicationRequest>;
    responseSerialize: grpc.serialize<server_v1_auth_pb.CreateApplicationResponse>;
    responseDeserialize: grpc.deserialize<server_v1_auth_pb.CreateApplicationResponse>;
}
interface IAuthService_IdeleteApplication extends grpc.MethodDefinition<server_v1_auth_pb.DeleteApplicationsRequest, server_v1_auth_pb.DeleteApplicationResponse> {
    path: "/tigrisdata.auth.v1.Auth/deleteApplication";
    requestStream: false;
    responseStream: false;
    requestSerialize: grpc.serialize<server_v1_auth_pb.DeleteApplicationsRequest>;
    requestDeserialize: grpc.deserialize<server_v1_auth_pb.DeleteApplicationsRequest>;
    responseSerialize: grpc.serialize<server_v1_auth_pb.DeleteApplicationResponse>;
    responseDeserialize: grpc.deserialize<server_v1_auth_pb.DeleteApplicationResponse>;
}
interface IAuthService_IlistApplications extends grpc.MethodDefinition<server_v1_auth_pb.ListApplicationsRequest, server_v1_auth_pb.ListApplicationsResponse> {
    path: "/tigrisdata.auth.v1.Auth/listApplications";
    requestStream: false;
    responseStream: false;
    requestSerialize: grpc.serialize<server_v1_auth_pb.ListApplicationsRequest>;
    requestDeserialize: grpc.deserialize<server_v1_auth_pb.ListApplicationsRequest>;
    responseSerialize: grpc.serialize<server_v1_auth_pb.ListApplicationsResponse>;
    responseDeserialize: grpc.deserialize<server_v1_auth_pb.ListApplicationsResponse>;
}
interface IAuthService_IrotateApplicationSecret extends grpc.MethodDefinition<server_v1_auth_pb.RotateApplicationSecretRequest, server_v1_auth_pb.RotateApplicationSecretResponse> {
    path: "/tigrisdata.auth.v1.Auth/rotateApplicationSecret";
    requestStream: false;
    responseStream: false;
    requestSerialize: grpc.serialize<server_v1_auth_pb.RotateApplicationSecretRequest>;
    requestDeserialize: grpc.deserialize<server_v1_auth_pb.RotateApplicationSecretRequest>;
    responseSerialize: grpc.serialize<server_v1_auth_pb.RotateApplicationSecretResponse>;
    responseDeserialize: grpc.deserialize<server_v1_auth_pb.RotateApplicationSecretResponse>;
}

export const AuthService: IAuthService;

export interface IAuthServer extends grpc.UntypedServiceImplementation {
    getAccessToken: grpc.handleUnaryCall<server_v1_auth_pb.GetAccessTokenRequest, server_v1_auth_pb.GetAccessTokenResponse>;
    createApplication: grpc.handleUnaryCall<server_v1_auth_pb.CreateApplicationRequest, server_v1_auth_pb.CreateApplicationResponse>;
    deleteApplication: grpc.handleUnaryCall<server_v1_auth_pb.DeleteApplicationsRequest, server_v1_auth_pb.DeleteApplicationResponse>;
    listApplications: grpc.handleUnaryCall<server_v1_auth_pb.ListApplicationsRequest, server_v1_auth_pb.ListApplicationsResponse>;
    rotateApplicationSecret: grpc.handleUnaryCall<server_v1_auth_pb.RotateApplicationSecretRequest, server_v1_auth_pb.RotateApplicationSecretResponse>;
}

export interface IAuthClient {
    getAccessToken(request: server_v1_auth_pb.GetAccessTokenRequest, callback: (error: grpc.ServiceError | null, response: server_v1_auth_pb.GetAccessTokenResponse) => void): grpc.ClientUnaryCall;
    getAccessToken(request: server_v1_auth_pb.GetAccessTokenRequest, metadata: grpc.Metadata, callback: (error: grpc.ServiceError | null, response: server_v1_auth_pb.GetAccessTokenResponse) => void): grpc.ClientUnaryCall;
    getAccessToken(request: server_v1_auth_pb.GetAccessTokenRequest, metadata: grpc.Metadata, options: Partial<grpc.CallOptions>, callback: (error: grpc.ServiceError | null, response: server_v1_auth_pb.GetAccessTokenResponse) => void): grpc.ClientUnaryCall;
    createApplication(request: server_v1_auth_pb.CreateApplicationRequest, callback: (error: grpc.ServiceError | null, response: server_v1_auth_pb.CreateApplicationResponse) => void): grpc.ClientUnaryCall;
    createApplication(request: server_v1_auth_pb.CreateApplicationRequest, metadata: grpc.Metadata, callback: (error: grpc.ServiceError | null, response: server_v1_auth_pb.CreateApplicationResponse) => void): grpc.ClientUnaryCall;
    createApplication(request: server_v1_auth_pb.CreateApplicationRequest, metadata: grpc.Metadata, options: Partial<grpc.CallOptions>, callback: (error: grpc.ServiceError | null, response: server_v1_auth_pb.CreateApplicationResponse) => void): grpc.ClientUnaryCall;
    deleteApplication(request: server_v1_auth_pb.DeleteApplicationsRequest, callback: (error: grpc.ServiceError | null, response: server_v1_auth_pb.DeleteApplicationResponse) => void): grpc.ClientUnaryCall;
    deleteApplication(request: server_v1_auth_pb.DeleteApplicationsRequest, metadata: grpc.Metadata, callback: (error: grpc.ServiceError | null, response: server_v1_auth_pb.DeleteApplicationResponse) => void): grpc.ClientUnaryCall;
    deleteApplication(request: server_v1_auth_pb.DeleteApplicationsRequest, metadata: grpc.Metadata, options: Partial<grpc.CallOptions>, callback: (error: grpc.ServiceError | null, response: server_v1_auth_pb.DeleteApplicationResponse) => void): grpc.ClientUnaryCall;
    listApplications(request: server_v1_auth_pb.ListApplicationsRequest, callback: (error: grpc.ServiceError | null, response: server_v1_auth_pb.ListApplicationsResponse) => void): grpc.ClientUnaryCall;
    listApplications(request: server_v1_auth_pb.ListApplicationsRequest, metadata: grpc.Metadata, callback: (error: grpc.ServiceError | null, response: server_v1_auth_pb.ListApplicationsResponse) => void): grpc.ClientUnaryCall;
    listApplications(request: server_v1_auth_pb.ListApplicationsRequest, metadata: grpc.Metadata, options: Partial<grpc.CallOptions>, callback: (error: grpc.ServiceError | null, response: server_v1_auth_pb.ListApplicationsResponse) => void): grpc.ClientUnaryCall;
    rotateApplicationSecret(request: server_v1_auth_pb.RotateApplicationSecretRequest, callback: (error: grpc.ServiceError | null, response: server_v1_auth_pb.RotateApplicationSecretResponse) => void): grpc.ClientUnaryCall;
    rotateApplicationSecret(request: server_v1_auth_pb.RotateApplicationSecretRequest, metadata: grpc.Metadata, callback: (error: grpc.ServiceError | null, response: server_v1_auth_pb.RotateApplicationSecretResponse) => void): grpc.ClientUnaryCall;
    rotateApplicationSecret(request: server_v1_auth_pb.RotateApplicationSecretRequest, metadata: grpc.Metadata, options: Partial<grpc.CallOptions>, callback: (error: grpc.ServiceError | null, response: server_v1_auth_pb.RotateApplicationSecretResponse) => void): grpc.ClientUnaryCall;
}

export class AuthClient extends grpc.Client implements IAuthClient {
    constructor(address: string, credentials: grpc.ChannelCredentials, options?: Partial<grpc.ClientOptions>);
    public getAccessToken(request: server_v1_auth_pb.GetAccessTokenRequest, callback: (error: grpc.ServiceError | null, response: server_v1_auth_pb.GetAccessTokenResponse) => void): grpc.ClientUnaryCall;
    public getAccessToken(request: server_v1_auth_pb.GetAccessTokenRequest, metadata: grpc.Metadata, callback: (error: grpc.ServiceError | null, response: server_v1_auth_pb.GetAccessTokenResponse) => void): grpc.ClientUnaryCall;
    public getAccessToken(request: server_v1_auth_pb.GetAccessTokenRequest, metadata: grpc.Metadata, options: Partial<grpc.CallOptions>, callback: (error: grpc.ServiceError | null, response: server_v1_auth_pb.GetAccessTokenResponse) => void): grpc.ClientUnaryCall;
    public createApplication(request: server_v1_auth_pb.CreateApplicationRequest, callback: (error: grpc.ServiceError | null, response: server_v1_auth_pb.CreateApplicationResponse) => void): grpc.ClientUnaryCall;
    public createApplication(request: server_v1_auth_pb.CreateApplicationRequest, metadata: grpc.Metadata, callback: (error: grpc.ServiceError | null, response: server_v1_auth_pb.CreateApplicationResponse) => void): grpc.ClientUnaryCall;
    public createApplication(request: server_v1_auth_pb.CreateApplicationRequest, metadata: grpc.Metadata, options: Partial<grpc.CallOptions>, callback: (error: grpc.ServiceError | null, response: server_v1_auth_pb.CreateApplicationResponse) => void): grpc.ClientUnaryCall;
    public deleteApplication(request: server_v1_auth_pb.DeleteApplicationsRequest, callback: (error: grpc.ServiceError | null, response: server_v1_auth_pb.DeleteApplicationResponse) => void): grpc.ClientUnaryCall;
    public deleteApplication(request: server_v1_auth_pb.DeleteApplicationsRequest, metadata: grpc.Metadata, callback: (error: grpc.ServiceError | null, response: server_v1_auth_pb.DeleteApplicationResponse) => void): grpc.ClientUnaryCall;
    public deleteApplication(request: server_v1_auth_pb.DeleteApplicationsRequest, metadata: grpc.Metadata, options: Partial<grpc.CallOptions>, callback: (error: grpc.ServiceError | null, response: server_v1_auth_pb.DeleteApplicationResponse) => void): grpc.ClientUnaryCall;
    public listApplications(request: server_v1_auth_pb.ListApplicationsRequest, callback: (error: grpc.ServiceError | null, response: server_v1_auth_pb.ListApplicationsResponse) => void): grpc.ClientUnaryCall;
    public listApplications(request: server_v1_auth_pb.ListApplicationsRequest, metadata: grpc.Metadata, callback: (error: grpc.ServiceError | null, response: server_v1_auth_pb.ListApplicationsResponse) => void): grpc.ClientUnaryCall;
    public listApplications(request: server_v1_auth_pb.ListApplicationsRequest, metadata: grpc.Metadata, options: Partial<grpc.CallOptions>, callback: (error: grpc.ServiceError | null, response: server_v1_auth_pb.ListApplicationsResponse) => void): grpc.ClientUnaryCall;
    public rotateApplicationSecret(request: server_v1_auth_pb.RotateApplicationSecretRequest, callback: (error: grpc.ServiceError | null, response: server_v1_auth_pb.RotateApplicationSecretResponse) => void): grpc.ClientUnaryCall;
    public rotateApplicationSecret(request: server_v1_auth_pb.RotateApplicationSecretRequest, metadata: grpc.Metadata, callback: (error: grpc.ServiceError | null, response: server_v1_auth_pb.RotateApplicationSecretResponse) => void): grpc.ClientUnaryCall;
    public rotateApplicationSecret(request: server_v1_auth_pb.RotateApplicationSecretRequest, metadata: grpc.Metadata, options: Partial<grpc.CallOptions>, callback: (error: grpc.ServiceError | null, response: server_v1_auth_pb.RotateApplicationSecretResponse) => void): grpc.ClientUnaryCall;
}
