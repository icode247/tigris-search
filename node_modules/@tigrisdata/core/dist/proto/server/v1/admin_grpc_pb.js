// GENERATED CODE -- DO NOT EDIT!

// Original file comments:
// Copyright 2022 Tigris Data, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
'use strict';
var grpc = require('@grpc/grpc-js');
var server_v1_admin_pb = require('../../server/v1/admin_pb.js');
var google_api_annotations_pb = require('../../google/api/annotations_pb.js');
var openapiv3_annotations_pb = require('../../openapiv3/annotations_pb.js');

function serialize_tigrisdata_admin_v1_CreateNamespaceRequest(arg) {
  if (!(arg instanceof server_v1_admin_pb.CreateNamespaceRequest)) {
    throw new Error('Expected argument of type tigrisdata.admin.v1.CreateNamespaceRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_tigrisdata_admin_v1_CreateNamespaceRequest(buffer_arg) {
  return server_v1_admin_pb.CreateNamespaceRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_tigrisdata_admin_v1_CreateNamespaceResponse(arg) {
  if (!(arg instanceof server_v1_admin_pb.CreateNamespaceResponse)) {
    throw new Error('Expected argument of type tigrisdata.admin.v1.CreateNamespaceResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_tigrisdata_admin_v1_CreateNamespaceResponse(buffer_arg) {
  return server_v1_admin_pb.CreateNamespaceResponse.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_tigrisdata_admin_v1_ListNamespacesRequest(arg) {
  if (!(arg instanceof server_v1_admin_pb.ListNamespacesRequest)) {
    throw new Error('Expected argument of type tigrisdata.admin.v1.ListNamespacesRequest');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_tigrisdata_admin_v1_ListNamespacesRequest(buffer_arg) {
  return server_v1_admin_pb.ListNamespacesRequest.deserializeBinary(new Uint8Array(buffer_arg));
}

function serialize_tigrisdata_admin_v1_ListNamespacesResponse(arg) {
  if (!(arg instanceof server_v1_admin_pb.ListNamespacesResponse)) {
    throw new Error('Expected argument of type tigrisdata.admin.v1.ListNamespacesResponse');
  }
  return Buffer.from(arg.serializeBinary());
}

function deserialize_tigrisdata_admin_v1_ListNamespacesResponse(buffer_arg) {
  return server_v1_admin_pb.ListNamespacesResponse.deserializeBinary(new Uint8Array(buffer_arg));
}


var AdminService = exports.AdminService = {
  // Creates a new namespace, if it does not exist
createNamespace: {
    path: '/tigrisdata.admin.v1.Admin/createNamespace',
    requestStream: false,
    responseStream: false,
    requestType: server_v1_admin_pb.CreateNamespaceRequest,
    responseType: server_v1_admin_pb.CreateNamespaceResponse,
    requestSerialize: serialize_tigrisdata_admin_v1_CreateNamespaceRequest,
    requestDeserialize: deserialize_tigrisdata_admin_v1_CreateNamespaceRequest,
    responseSerialize: serialize_tigrisdata_admin_v1_CreateNamespaceResponse,
    responseDeserialize: deserialize_tigrisdata_admin_v1_CreateNamespaceResponse,
  },
  // List all namespace
listNamespaces: {
    path: '/tigrisdata.admin.v1.Admin/listNamespaces',
    requestStream: false,
    responseStream: false,
    requestType: server_v1_admin_pb.ListNamespacesRequest,
    responseType: server_v1_admin_pb.ListNamespacesResponse,
    requestSerialize: serialize_tigrisdata_admin_v1_ListNamespacesRequest,
    requestDeserialize: deserialize_tigrisdata_admin_v1_ListNamespacesRequest,
    responseSerialize: serialize_tigrisdata_admin_v1_ListNamespacesResponse,
    responseDeserialize: deserialize_tigrisdata_admin_v1_ListNamespacesResponse,
  },
};

exports.AdminClient = grpc.makeGenericClientConstructor(AdminService);
