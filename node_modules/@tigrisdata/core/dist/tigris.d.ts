import { TigrisClient } from "./proto/server/v1/api_grpc_pb";
import { DatabaseInfo, DatabaseOptions, DropDatabaseResponse, ServerMetadata } from "./types";
import { DB } from "./db";
export interface TigrisClientConfig {
    serverUrl: string;
    insecureChannel?: boolean;
    applicationId?: string;
    applicationSecret?: string;
}
/**
 * Tigris client
 */
export declare class Tigris {
    grpcClient: TigrisClient;
    /**
     *
     * @param  {TigrisClientConfig} config configuration
     */
    constructor(config: TigrisClientConfig);
    /**
     * Lists the databases
     * @return {Promise<Array<DatabaseInfo>>} a promise of an array of
     * DatabaseInfo
     */
    listDatabases(): Promise<Array<DatabaseInfo>>;
    createDatabaseIfNotExists(db: string, _options?: DatabaseOptions): Promise<DB>;
    dropDatabase(db: string, _options?: DatabaseOptions): Promise<DropDatabaseResponse>;
    getDatabase(db: string): DB;
    getServerMetadata(): Promise<ServerMetadata>;
}
/**
 * Default instance of the Tigris client
 */
declare const _default: Tigris;
export default _default;
