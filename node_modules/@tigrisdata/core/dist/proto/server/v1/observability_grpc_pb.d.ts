// package: tigrisdata.observability.v1
// file: server/v1/observability.proto

/* tslint:disable */
/* eslint-disable */

import * as grpc from "@grpc/grpc-js";
import * as server_v1_observability_pb from "../../server/v1/observability_pb";
import * as openapiv3_annotations_pb from "../../openapiv3/annotations_pb";

interface IObservabilityService extends grpc.ServiceDefinition<grpc.UntypedServiceImplementation> {
    queryTimeSeriesMetrics: IObservabilityService_IQueryTimeSeriesMetrics;
}

interface IObservabilityService_IQueryTimeSeriesMetrics extends grpc.MethodDefinition<server_v1_observability_pb.QueryTimeSeriesMetricsRequest, server_v1_observability_pb.QueryTimeSeriesMetricsResponse> {
    path: "/tigrisdata.observability.v1.Observability/QueryTimeSeriesMetrics";
    requestStream: false;
    responseStream: false;
    requestSerialize: grpc.serialize<server_v1_observability_pb.QueryTimeSeriesMetricsRequest>;
    requestDeserialize: grpc.deserialize<server_v1_observability_pb.QueryTimeSeriesMetricsRequest>;
    responseSerialize: grpc.serialize<server_v1_observability_pb.QueryTimeSeriesMetricsResponse>;
    responseDeserialize: grpc.deserialize<server_v1_observability_pb.QueryTimeSeriesMetricsResponse>;
}

export const ObservabilityService: IObservabilityService;

export interface IObservabilityServer extends grpc.UntypedServiceImplementation {
    queryTimeSeriesMetrics: grpc.handleUnaryCall<server_v1_observability_pb.QueryTimeSeriesMetricsRequest, server_v1_observability_pb.QueryTimeSeriesMetricsResponse>;
}

export interface IObservabilityClient {
    queryTimeSeriesMetrics(request: server_v1_observability_pb.QueryTimeSeriesMetricsRequest, callback: (error: grpc.ServiceError | null, response: server_v1_observability_pb.QueryTimeSeriesMetricsResponse) => void): grpc.ClientUnaryCall;
    queryTimeSeriesMetrics(request: server_v1_observability_pb.QueryTimeSeriesMetricsRequest, metadata: grpc.Metadata, callback: (error: grpc.ServiceError | null, response: server_v1_observability_pb.QueryTimeSeriesMetricsResponse) => void): grpc.ClientUnaryCall;
    queryTimeSeriesMetrics(request: server_v1_observability_pb.QueryTimeSeriesMetricsRequest, metadata: grpc.Metadata, options: Partial<grpc.CallOptions>, callback: (error: grpc.ServiceError | null, response: server_v1_observability_pb.QueryTimeSeriesMetricsResponse) => void): grpc.ClientUnaryCall;
}

export class ObservabilityClient extends grpc.Client implements IObservabilityClient {
    constructor(address: string, credentials: grpc.ChannelCredentials, options?: Partial<grpc.ClientOptions>);
    public queryTimeSeriesMetrics(request: server_v1_observability_pb.QueryTimeSeriesMetricsRequest, callback: (error: grpc.ServiceError | null, response: server_v1_observability_pb.QueryTimeSeriesMetricsResponse) => void): grpc.ClientUnaryCall;
    public queryTimeSeriesMetrics(request: server_v1_observability_pb.QueryTimeSeriesMetricsRequest, metadata: grpc.Metadata, callback: (error: grpc.ServiceError | null, response: server_v1_observability_pb.QueryTimeSeriesMetricsResponse) => void): grpc.ClientUnaryCall;
    public queryTimeSeriesMetrics(request: server_v1_observability_pb.QueryTimeSeriesMetricsRequest, metadata: grpc.Metadata, options: Partial<grpc.CallOptions>, callback: (error: grpc.ServiceError | null, response: server_v1_observability_pb.QueryTimeSeriesMetricsResponse) => void): grpc.ClientUnaryCall;
}
