// source: server/v1/api.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_api_annotations_pb = require('../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var openapiv3_annotations_pb = require('../../openapiv3/annotations_pb.js');
goog.object.extend(proto, openapiv3_annotations_pb);
goog.exportSymbol('proto.tigrisdata.v1.BeginTransactionRequest', null, global);
goog.exportSymbol('proto.tigrisdata.v1.BeginTransactionResponse', null, global);
goog.exportSymbol('proto.tigrisdata.v1.Code', null, global);
goog.exportSymbol('proto.tigrisdata.v1.CollectionDescription', null, global);
goog.exportSymbol('proto.tigrisdata.v1.CollectionInfo', null, global);
goog.exportSymbol('proto.tigrisdata.v1.CollectionMetadata', null, global);
goog.exportSymbol('proto.tigrisdata.v1.CollectionOptions', null, global);
goog.exportSymbol('proto.tigrisdata.v1.CollectionType', null, global);
goog.exportSymbol('proto.tigrisdata.v1.CommitTransactionRequest', null, global);
goog.exportSymbol('proto.tigrisdata.v1.CommitTransactionResponse', null, global);
goog.exportSymbol('proto.tigrisdata.v1.CreateDatabaseRequest', null, global);
goog.exportSymbol('proto.tigrisdata.v1.CreateDatabaseResponse', null, global);
goog.exportSymbol('proto.tigrisdata.v1.CreateOrUpdateCollectionRequest', null, global);
goog.exportSymbol('proto.tigrisdata.v1.CreateOrUpdateCollectionResponse', null, global);
goog.exportSymbol('proto.tigrisdata.v1.DatabaseDescription', null, global);
goog.exportSymbol('proto.tigrisdata.v1.DatabaseInfo', null, global);
goog.exportSymbol('proto.tigrisdata.v1.DatabaseMetadata', null, global);
goog.exportSymbol('proto.tigrisdata.v1.DatabaseOptions', null, global);
goog.exportSymbol('proto.tigrisdata.v1.DeleteRequest', null, global);
goog.exportSymbol('proto.tigrisdata.v1.DeleteRequestOptions', null, global);
goog.exportSymbol('proto.tigrisdata.v1.DeleteResponse', null, global);
goog.exportSymbol('proto.tigrisdata.v1.DescribeCollectionRequest', null, global);
goog.exportSymbol('proto.tigrisdata.v1.DescribeCollectionResponse', null, global);
goog.exportSymbol('proto.tigrisdata.v1.DescribeDatabaseRequest', null, global);
goog.exportSymbol('proto.tigrisdata.v1.DescribeDatabaseResponse', null, global);
goog.exportSymbol('proto.tigrisdata.v1.DropCollectionRequest', null, global);
goog.exportSymbol('proto.tigrisdata.v1.DropCollectionResponse', null, global);
goog.exportSymbol('proto.tigrisdata.v1.DropDatabaseRequest', null, global);
goog.exportSymbol('proto.tigrisdata.v1.DropDatabaseResponse', null, global);
goog.exportSymbol('proto.tigrisdata.v1.Error', null, global);
goog.exportSymbol('proto.tigrisdata.v1.ErrorDetails', null, global);
goog.exportSymbol('proto.tigrisdata.v1.EventsRequest', null, global);
goog.exportSymbol('proto.tigrisdata.v1.EventsRequestOptions', null, global);
goog.exportSymbol('proto.tigrisdata.v1.EventsResponse', null, global);
goog.exportSymbol('proto.tigrisdata.v1.FacetCount', null, global);
goog.exportSymbol('proto.tigrisdata.v1.FacetStats', null, global);
goog.exportSymbol('proto.tigrisdata.v1.GetInfoRequest', null, global);
goog.exportSymbol('proto.tigrisdata.v1.GetInfoResponse', null, global);
goog.exportSymbol('proto.tigrisdata.v1.InsertRequest', null, global);
goog.exportSymbol('proto.tigrisdata.v1.InsertRequestOptions', null, global);
goog.exportSymbol('proto.tigrisdata.v1.InsertResponse', null, global);
goog.exportSymbol('proto.tigrisdata.v1.ListCollectionsRequest', null, global);
goog.exportSymbol('proto.tigrisdata.v1.ListCollectionsResponse', null, global);
goog.exportSymbol('proto.tigrisdata.v1.ListDatabasesRequest', null, global);
goog.exportSymbol('proto.tigrisdata.v1.ListDatabasesResponse', null, global);
goog.exportSymbol('proto.tigrisdata.v1.Page', null, global);
goog.exportSymbol('proto.tigrisdata.v1.PublishRequest', null, global);
goog.exportSymbol('proto.tigrisdata.v1.PublishRequestOptions', null, global);
goog.exportSymbol('proto.tigrisdata.v1.PublishResponse', null, global);
goog.exportSymbol('proto.tigrisdata.v1.ReadRequest', null, global);
goog.exportSymbol('proto.tigrisdata.v1.ReadRequestOptions', null, global);
goog.exportSymbol('proto.tigrisdata.v1.ReadResponse', null, global);
goog.exportSymbol('proto.tigrisdata.v1.ReplaceRequest', null, global);
goog.exportSymbol('proto.tigrisdata.v1.ReplaceRequestOptions', null, global);
goog.exportSymbol('proto.tigrisdata.v1.ReplaceResponse', null, global);
goog.exportSymbol('proto.tigrisdata.v1.ResponseMetadata', null, global);
goog.exportSymbol('proto.tigrisdata.v1.RetryInfo', null, global);
goog.exportSymbol('proto.tigrisdata.v1.RollbackTransactionRequest', null, global);
goog.exportSymbol('proto.tigrisdata.v1.RollbackTransactionResponse', null, global);
goog.exportSymbol('proto.tigrisdata.v1.SearchFacet', null, global);
goog.exportSymbol('proto.tigrisdata.v1.SearchHit', null, global);
goog.exportSymbol('proto.tigrisdata.v1.SearchHitMeta', null, global);
goog.exportSymbol('proto.tigrisdata.v1.SearchMetadata', null, global);
goog.exportSymbol('proto.tigrisdata.v1.SearchRequest', null, global);
goog.exportSymbol('proto.tigrisdata.v1.SearchResponse', null, global);
goog.exportSymbol('proto.tigrisdata.v1.StreamEvent', null, global);
goog.exportSymbol('proto.tigrisdata.v1.SubscribeRequest', null, global);
goog.exportSymbol('proto.tigrisdata.v1.SubscribeRequestOptions', null, global);
goog.exportSymbol('proto.tigrisdata.v1.SubscribeResponse', null, global);
goog.exportSymbol('proto.tigrisdata.v1.TransactionCtx', null, global);
goog.exportSymbol('proto.tigrisdata.v1.TransactionOptions', null, global);
goog.exportSymbol('proto.tigrisdata.v1.UpdateRequest', null, global);
goog.exportSymbol('proto.tigrisdata.v1.UpdateRequestOptions', null, global);
goog.exportSymbol('proto.tigrisdata.v1.UpdateResponse', null, global);
goog.exportSymbol('proto.tigrisdata.v1.WriteOptions', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.RetryInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.RetryInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.RetryInfo.displayName = 'proto.tigrisdata.v1.RetryInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.ErrorDetails = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.ErrorDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.ErrorDetails.displayName = 'proto.tigrisdata.v1.ErrorDetails';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.Error = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.Error, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.Error.displayName = 'proto.tigrisdata.v1.Error';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.WriteOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.WriteOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.WriteOptions.displayName = 'proto.tigrisdata.v1.WriteOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.ReadRequestOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.ReadRequestOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.ReadRequestOptions.displayName = 'proto.tigrisdata.v1.ReadRequestOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.DatabaseOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.DatabaseOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.DatabaseOptions.displayName = 'proto.tigrisdata.v1.DatabaseOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.CollectionOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.CollectionOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.CollectionOptions.displayName = 'proto.tigrisdata.v1.CollectionOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.TransactionOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.TransactionOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.TransactionOptions.displayName = 'proto.tigrisdata.v1.TransactionOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.TransactionCtx = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.TransactionCtx, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.TransactionCtx.displayName = 'proto.tigrisdata.v1.TransactionCtx';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.BeginTransactionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.BeginTransactionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.BeginTransactionRequest.displayName = 'proto.tigrisdata.v1.BeginTransactionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.BeginTransactionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.BeginTransactionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.BeginTransactionResponse.displayName = 'proto.tigrisdata.v1.BeginTransactionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.CommitTransactionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.CommitTransactionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.CommitTransactionRequest.displayName = 'proto.tigrisdata.v1.CommitTransactionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.CommitTransactionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.CommitTransactionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.CommitTransactionResponse.displayName = 'proto.tigrisdata.v1.CommitTransactionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.RollbackTransactionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.RollbackTransactionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.RollbackTransactionRequest.displayName = 'proto.tigrisdata.v1.RollbackTransactionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.RollbackTransactionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.RollbackTransactionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.RollbackTransactionResponse.displayName = 'proto.tigrisdata.v1.RollbackTransactionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.InsertRequestOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.InsertRequestOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.InsertRequestOptions.displayName = 'proto.tigrisdata.v1.InsertRequestOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.ResponseMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.ResponseMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.ResponseMetadata.displayName = 'proto.tigrisdata.v1.ResponseMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.InsertRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tigrisdata.v1.InsertRequest.repeatedFields_, null);
};
goog.inherits(proto.tigrisdata.v1.InsertRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.InsertRequest.displayName = 'proto.tigrisdata.v1.InsertRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.InsertResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tigrisdata.v1.InsertResponse.repeatedFields_, null);
};
goog.inherits(proto.tigrisdata.v1.InsertResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.InsertResponse.displayName = 'proto.tigrisdata.v1.InsertResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.ReplaceRequestOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.ReplaceRequestOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.ReplaceRequestOptions.displayName = 'proto.tigrisdata.v1.ReplaceRequestOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.ReplaceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tigrisdata.v1.ReplaceRequest.repeatedFields_, null);
};
goog.inherits(proto.tigrisdata.v1.ReplaceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.ReplaceRequest.displayName = 'proto.tigrisdata.v1.ReplaceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.ReplaceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tigrisdata.v1.ReplaceResponse.repeatedFields_, null);
};
goog.inherits(proto.tigrisdata.v1.ReplaceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.ReplaceResponse.displayName = 'proto.tigrisdata.v1.ReplaceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.DeleteRequestOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.DeleteRequestOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.DeleteRequestOptions.displayName = 'proto.tigrisdata.v1.DeleteRequestOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.DeleteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.DeleteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.DeleteRequest.displayName = 'proto.tigrisdata.v1.DeleteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.DeleteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.DeleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.DeleteResponse.displayName = 'proto.tigrisdata.v1.DeleteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.UpdateRequestOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.UpdateRequestOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.UpdateRequestOptions.displayName = 'proto.tigrisdata.v1.UpdateRequestOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.UpdateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.UpdateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.UpdateRequest.displayName = 'proto.tigrisdata.v1.UpdateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.UpdateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.UpdateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.UpdateResponse.displayName = 'proto.tigrisdata.v1.UpdateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.ReadRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.ReadRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.ReadRequest.displayName = 'proto.tigrisdata.v1.ReadRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.ReadResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.ReadResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.ReadResponse.displayName = 'proto.tigrisdata.v1.ReadResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.SearchRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tigrisdata.v1.SearchRequest.repeatedFields_, null);
};
goog.inherits(proto.tigrisdata.v1.SearchRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.SearchRequest.displayName = 'proto.tigrisdata.v1.SearchRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.SearchResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tigrisdata.v1.SearchResponse.repeatedFields_, null);
};
goog.inherits(proto.tigrisdata.v1.SearchResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.SearchResponse.displayName = 'proto.tigrisdata.v1.SearchResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.SearchHit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.SearchHit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.SearchHit.displayName = 'proto.tigrisdata.v1.SearchHit';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.SearchHitMeta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.SearchHitMeta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.SearchHitMeta.displayName = 'proto.tigrisdata.v1.SearchHitMeta';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.SearchFacet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tigrisdata.v1.SearchFacet.repeatedFields_, null);
};
goog.inherits(proto.tigrisdata.v1.SearchFacet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.SearchFacet.displayName = 'proto.tigrisdata.v1.SearchFacet';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.FacetCount = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.FacetCount, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.FacetCount.displayName = 'proto.tigrisdata.v1.FacetCount';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.FacetStats = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.FacetStats, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.FacetStats.displayName = 'proto.tigrisdata.v1.FacetStats';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.SearchMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.SearchMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.SearchMetadata.displayName = 'proto.tigrisdata.v1.SearchMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.Page = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.Page, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.Page.displayName = 'proto.tigrisdata.v1.Page';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.CreateDatabaseRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.CreateDatabaseRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.CreateDatabaseRequest.displayName = 'proto.tigrisdata.v1.CreateDatabaseRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.CreateDatabaseResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.CreateDatabaseResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.CreateDatabaseResponse.displayName = 'proto.tigrisdata.v1.CreateDatabaseResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.DropDatabaseRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.DropDatabaseRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.DropDatabaseRequest.displayName = 'proto.tigrisdata.v1.DropDatabaseRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.DropDatabaseResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.DropDatabaseResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.DropDatabaseResponse.displayName = 'proto.tigrisdata.v1.DropDatabaseResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.CreateOrUpdateCollectionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.CreateOrUpdateCollectionRequest.displayName = 'proto.tigrisdata.v1.CreateOrUpdateCollectionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.CreateOrUpdateCollectionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.CreateOrUpdateCollectionResponse.displayName = 'proto.tigrisdata.v1.CreateOrUpdateCollectionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.DropCollectionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.DropCollectionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.DropCollectionRequest.displayName = 'proto.tigrisdata.v1.DropCollectionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.DropCollectionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.DropCollectionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.DropCollectionResponse.displayName = 'proto.tigrisdata.v1.DropCollectionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.DatabaseInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.DatabaseInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.DatabaseInfo.displayName = 'proto.tigrisdata.v1.DatabaseInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.CollectionInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.CollectionInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.CollectionInfo.displayName = 'proto.tigrisdata.v1.CollectionInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.ListDatabasesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.ListDatabasesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.ListDatabasesRequest.displayName = 'proto.tigrisdata.v1.ListDatabasesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.ListDatabasesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tigrisdata.v1.ListDatabasesResponse.repeatedFields_, null);
};
goog.inherits(proto.tigrisdata.v1.ListDatabasesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.ListDatabasesResponse.displayName = 'proto.tigrisdata.v1.ListDatabasesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.ListCollectionsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.ListCollectionsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.ListCollectionsRequest.displayName = 'proto.tigrisdata.v1.ListCollectionsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.ListCollectionsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tigrisdata.v1.ListCollectionsResponse.repeatedFields_, null);
};
goog.inherits(proto.tigrisdata.v1.ListCollectionsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.ListCollectionsResponse.displayName = 'proto.tigrisdata.v1.ListCollectionsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.DescribeDatabaseRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.DescribeDatabaseRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.DescribeDatabaseRequest.displayName = 'proto.tigrisdata.v1.DescribeDatabaseRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.DescribeCollectionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.DescribeCollectionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.DescribeCollectionRequest.displayName = 'proto.tigrisdata.v1.DescribeCollectionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.DescribeDatabaseResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tigrisdata.v1.DescribeDatabaseResponse.repeatedFields_, null);
};
goog.inherits(proto.tigrisdata.v1.DescribeDatabaseResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.DescribeDatabaseResponse.displayName = 'proto.tigrisdata.v1.DescribeDatabaseResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.DescribeCollectionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.DescribeCollectionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.DescribeCollectionResponse.displayName = 'proto.tigrisdata.v1.DescribeCollectionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.DatabaseDescription = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.DatabaseDescription, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.DatabaseDescription.displayName = 'proto.tigrisdata.v1.DatabaseDescription';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.CollectionDescription = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.CollectionDescription, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.CollectionDescription.displayName = 'proto.tigrisdata.v1.CollectionDescription';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.DatabaseMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.DatabaseMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.DatabaseMetadata.displayName = 'proto.tigrisdata.v1.DatabaseMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.CollectionMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.CollectionMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.CollectionMetadata.displayName = 'proto.tigrisdata.v1.CollectionMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.EventsRequestOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.EventsRequestOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.EventsRequestOptions.displayName = 'proto.tigrisdata.v1.EventsRequestOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.EventsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.EventsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.EventsRequest.displayName = 'proto.tigrisdata.v1.EventsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.EventsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.EventsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.EventsResponse.displayName = 'proto.tigrisdata.v1.EventsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.StreamEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.StreamEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.StreamEvent.displayName = 'proto.tigrisdata.v1.StreamEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.GetInfoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.GetInfoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.GetInfoRequest.displayName = 'proto.tigrisdata.v1.GetInfoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.GetInfoResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.GetInfoResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.GetInfoResponse.displayName = 'proto.tigrisdata.v1.GetInfoResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.PublishRequestOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.PublishRequestOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.PublishRequestOptions.displayName = 'proto.tigrisdata.v1.PublishRequestOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.PublishRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tigrisdata.v1.PublishRequest.repeatedFields_, null);
};
goog.inherits(proto.tigrisdata.v1.PublishRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.PublishRequest.displayName = 'proto.tigrisdata.v1.PublishRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.PublishResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.tigrisdata.v1.PublishResponse.repeatedFields_, null);
};
goog.inherits(proto.tigrisdata.v1.PublishResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.PublishResponse.displayName = 'proto.tigrisdata.v1.PublishResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.SubscribeRequestOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.SubscribeRequestOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.SubscribeRequestOptions.displayName = 'proto.tigrisdata.v1.SubscribeRequestOptions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.SubscribeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.SubscribeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.SubscribeRequest.displayName = 'proto.tigrisdata.v1.SubscribeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.tigrisdata.v1.SubscribeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.tigrisdata.v1.SubscribeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.tigrisdata.v1.SubscribeResponse.displayName = 'proto.tigrisdata.v1.SubscribeResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.RetryInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.RetryInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.RetryInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.RetryInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    delay: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.RetryInfo}
 */
proto.tigrisdata.v1.RetryInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.RetryInfo;
  return proto.tigrisdata.v1.RetryInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.RetryInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.RetryInfo}
 */
proto.tigrisdata.v1.RetryInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDelay(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.RetryInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.RetryInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.RetryInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.RetryInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDelay();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional int32 delay = 3;
 * @return {number}
 */
proto.tigrisdata.v1.RetryInfo.prototype.getDelay = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.tigrisdata.v1.RetryInfo} returns this
 */
proto.tigrisdata.v1.RetryInfo.prototype.setDelay = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.ErrorDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.ErrorDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.ErrorDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ErrorDetails.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, ""),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    retry: (f = msg.getRetry()) && proto.tigrisdata.v1.RetryInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.ErrorDetails}
 */
proto.tigrisdata.v1.ErrorDetails.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.ErrorDetails;
  return proto.tigrisdata.v1.ErrorDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.ErrorDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.ErrorDetails}
 */
proto.tigrisdata.v1.ErrorDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = new proto.tigrisdata.v1.RetryInfo;
      reader.readMessage(value,proto.tigrisdata.v1.RetryInfo.deserializeBinaryFromReader);
      msg.setRetry(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.ErrorDetails.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.ErrorDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.ErrorDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ErrorDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRetry();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.tigrisdata.v1.RetryInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional string code = 1;
 * @return {string}
 */
proto.tigrisdata.v1.ErrorDetails.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.ErrorDetails} returns this
 */
proto.tigrisdata.v1.ErrorDetails.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.tigrisdata.v1.ErrorDetails.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.ErrorDetails} returns this
 */
proto.tigrisdata.v1.ErrorDetails.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional RetryInfo retry = 3;
 * @return {?proto.tigrisdata.v1.RetryInfo}
 */
proto.tigrisdata.v1.ErrorDetails.prototype.getRetry = function() {
  return /** @type{?proto.tigrisdata.v1.RetryInfo} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.RetryInfo, 3));
};


/**
 * @param {?proto.tigrisdata.v1.RetryInfo|undefined} value
 * @return {!proto.tigrisdata.v1.ErrorDetails} returns this
*/
proto.tigrisdata.v1.ErrorDetails.prototype.setRetry = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.ErrorDetails} returns this
 */
proto.tigrisdata.v1.ErrorDetails.prototype.clearRetry = function() {
  return this.setRetry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.ErrorDetails.prototype.hasRetry = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.Error.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.Error.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.Error} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.Error.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.Error}
 */
proto.tigrisdata.v1.Error.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.Error;
  return proto.tigrisdata.v1.Error.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.Error} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.Error}
 */
proto.tigrisdata.v1.Error.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.tigrisdata.v1.Code} */ (reader.readEnum());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.Error.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.Error.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.Error} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.Error.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional Code code = 1;
 * @return {!proto.tigrisdata.v1.Code}
 */
proto.tigrisdata.v1.Error.prototype.getCode = function() {
  return /** @type {!proto.tigrisdata.v1.Code} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.tigrisdata.v1.Code} value
 * @return {!proto.tigrisdata.v1.Error} returns this
 */
proto.tigrisdata.v1.Error.prototype.setCode = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.tigrisdata.v1.Error.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.Error} returns this
 */
proto.tigrisdata.v1.Error.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.WriteOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.WriteOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.WriteOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.WriteOptions.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.WriteOptions}
 */
proto.tigrisdata.v1.WriteOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.WriteOptions;
  return proto.tigrisdata.v1.WriteOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.WriteOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.WriteOptions}
 */
proto.tigrisdata.v1.WriteOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.WriteOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.WriteOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.WriteOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.WriteOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.ReadRequestOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.ReadRequestOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.ReadRequestOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ReadRequestOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    limit: jspb.Message.getFieldWithDefault(msg, 2, 0),
    skip: jspb.Message.getFieldWithDefault(msg, 3, 0),
    offset: msg.getOffset_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.ReadRequestOptions}
 */
proto.tigrisdata.v1.ReadRequestOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.ReadRequestOptions;
  return proto.tigrisdata.v1.ReadRequestOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.ReadRequestOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.ReadRequestOptions}
 */
proto.tigrisdata.v1.ReadRequestOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLimit(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSkip(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setOffset(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.ReadRequestOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.ReadRequestOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.ReadRequestOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ReadRequestOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getSkip();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getOffset_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
};


/**
 * optional int64 limit = 2;
 * @return {number}
 */
proto.tigrisdata.v1.ReadRequestOptions.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.tigrisdata.v1.ReadRequestOptions} returns this
 */
proto.tigrisdata.v1.ReadRequestOptions.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 skip = 3;
 * @return {number}
 */
proto.tigrisdata.v1.ReadRequestOptions.prototype.getSkip = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.tigrisdata.v1.ReadRequestOptions} returns this
 */
proto.tigrisdata.v1.ReadRequestOptions.prototype.setSkip = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bytes offset = 4;
 * @return {!(string|Uint8Array)}
 */
proto.tigrisdata.v1.ReadRequestOptions.prototype.getOffset = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes offset = 4;
 * This is a type-conversion wrapper around `getOffset()`
 * @return {string}
 */
proto.tigrisdata.v1.ReadRequestOptions.prototype.getOffset_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getOffset()));
};


/**
 * optional bytes offset = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getOffset()`
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.ReadRequestOptions.prototype.getOffset_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getOffset()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.tigrisdata.v1.ReadRequestOptions} returns this
 */
proto.tigrisdata.v1.ReadRequestOptions.prototype.setOffset = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.DatabaseOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.DatabaseOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.DatabaseOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DatabaseOptions.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.DatabaseOptions}
 */
proto.tigrisdata.v1.DatabaseOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.DatabaseOptions;
  return proto.tigrisdata.v1.DatabaseOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.DatabaseOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.DatabaseOptions}
 */
proto.tigrisdata.v1.DatabaseOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.DatabaseOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.DatabaseOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.DatabaseOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DatabaseOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.CollectionOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.CollectionOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.CollectionOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.CollectionOptions.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.CollectionOptions}
 */
proto.tigrisdata.v1.CollectionOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.CollectionOptions;
  return proto.tigrisdata.v1.CollectionOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.CollectionOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.CollectionOptions}
 */
proto.tigrisdata.v1.CollectionOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.CollectionOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.CollectionOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.CollectionOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.CollectionOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.TransactionOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.TransactionOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.TransactionOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.TransactionOptions.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.TransactionOptions}
 */
proto.tigrisdata.v1.TransactionOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.TransactionOptions;
  return proto.tigrisdata.v1.TransactionOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.TransactionOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.TransactionOptions}
 */
proto.tigrisdata.v1.TransactionOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.TransactionOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.TransactionOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.TransactionOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.TransactionOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.TransactionCtx.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.TransactionCtx.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.TransactionCtx} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.TransactionCtx.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    origin: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.TransactionCtx}
 */
proto.tigrisdata.v1.TransactionCtx.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.TransactionCtx;
  return proto.tigrisdata.v1.TransactionCtx.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.TransactionCtx} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.TransactionCtx}
 */
proto.tigrisdata.v1.TransactionCtx.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrigin(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.TransactionCtx.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.TransactionCtx.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.TransactionCtx} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.TransactionCtx.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOrigin();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.tigrisdata.v1.TransactionCtx.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.TransactionCtx} returns this
 */
proto.tigrisdata.v1.TransactionCtx.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string origin = 2;
 * @return {string}
 */
proto.tigrisdata.v1.TransactionCtx.prototype.getOrigin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.TransactionCtx} returns this
 */
proto.tigrisdata.v1.TransactionCtx.prototype.setOrigin = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.BeginTransactionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.BeginTransactionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.BeginTransactionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.BeginTransactionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    db: jspb.Message.getFieldWithDefault(msg, 1, ""),
    options: (f = msg.getOptions()) && proto.tigrisdata.v1.TransactionOptions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.BeginTransactionRequest}
 */
proto.tigrisdata.v1.BeginTransactionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.BeginTransactionRequest;
  return proto.tigrisdata.v1.BeginTransactionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.BeginTransactionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.BeginTransactionRequest}
 */
proto.tigrisdata.v1.BeginTransactionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDb(value);
      break;
    case 2:
      var value = new proto.tigrisdata.v1.TransactionOptions;
      reader.readMessage(value,proto.tigrisdata.v1.TransactionOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.BeginTransactionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.BeginTransactionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.BeginTransactionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.BeginTransactionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDb();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.tigrisdata.v1.TransactionOptions.serializeBinaryToWriter
    );
  }
};


/**
 * optional string db = 1;
 * @return {string}
 */
proto.tigrisdata.v1.BeginTransactionRequest.prototype.getDb = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.BeginTransactionRequest} returns this
 */
proto.tigrisdata.v1.BeginTransactionRequest.prototype.setDb = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional TransactionOptions options = 2;
 * @return {?proto.tigrisdata.v1.TransactionOptions}
 */
proto.tigrisdata.v1.BeginTransactionRequest.prototype.getOptions = function() {
  return /** @type{?proto.tigrisdata.v1.TransactionOptions} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.TransactionOptions, 2));
};


/**
 * @param {?proto.tigrisdata.v1.TransactionOptions|undefined} value
 * @return {!proto.tigrisdata.v1.BeginTransactionRequest} returns this
*/
proto.tigrisdata.v1.BeginTransactionRequest.prototype.setOptions = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.BeginTransactionRequest} returns this
 */
proto.tigrisdata.v1.BeginTransactionRequest.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.BeginTransactionRequest.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.BeginTransactionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.BeginTransactionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.BeginTransactionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.BeginTransactionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    txCtx: (f = msg.getTxCtx()) && proto.tigrisdata.v1.TransactionCtx.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.BeginTransactionResponse}
 */
proto.tigrisdata.v1.BeginTransactionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.BeginTransactionResponse;
  return proto.tigrisdata.v1.BeginTransactionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.BeginTransactionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.BeginTransactionResponse}
 */
proto.tigrisdata.v1.BeginTransactionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tigrisdata.v1.TransactionCtx;
      reader.readMessage(value,proto.tigrisdata.v1.TransactionCtx.deserializeBinaryFromReader);
      msg.setTxCtx(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.BeginTransactionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.BeginTransactionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.BeginTransactionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.BeginTransactionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTxCtx();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.tigrisdata.v1.TransactionCtx.serializeBinaryToWriter
    );
  }
};


/**
 * optional TransactionCtx tx_ctx = 1;
 * @return {?proto.tigrisdata.v1.TransactionCtx}
 */
proto.tigrisdata.v1.BeginTransactionResponse.prototype.getTxCtx = function() {
  return /** @type{?proto.tigrisdata.v1.TransactionCtx} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.TransactionCtx, 1));
};


/**
 * @param {?proto.tigrisdata.v1.TransactionCtx|undefined} value
 * @return {!proto.tigrisdata.v1.BeginTransactionResponse} returns this
*/
proto.tigrisdata.v1.BeginTransactionResponse.prototype.setTxCtx = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.BeginTransactionResponse} returns this
 */
proto.tigrisdata.v1.BeginTransactionResponse.prototype.clearTxCtx = function() {
  return this.setTxCtx(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.BeginTransactionResponse.prototype.hasTxCtx = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.CommitTransactionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.CommitTransactionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.CommitTransactionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.CommitTransactionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    db: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.CommitTransactionRequest}
 */
proto.tigrisdata.v1.CommitTransactionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.CommitTransactionRequest;
  return proto.tigrisdata.v1.CommitTransactionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.CommitTransactionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.CommitTransactionRequest}
 */
proto.tigrisdata.v1.CommitTransactionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDb(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.CommitTransactionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.CommitTransactionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.CommitTransactionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.CommitTransactionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDb();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string db = 1;
 * @return {string}
 */
proto.tigrisdata.v1.CommitTransactionRequest.prototype.getDb = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.CommitTransactionRequest} returns this
 */
proto.tigrisdata.v1.CommitTransactionRequest.prototype.setDb = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.CommitTransactionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.CommitTransactionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.CommitTransactionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.CommitTransactionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.CommitTransactionResponse}
 */
proto.tigrisdata.v1.CommitTransactionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.CommitTransactionResponse;
  return proto.tigrisdata.v1.CommitTransactionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.CommitTransactionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.CommitTransactionResponse}
 */
proto.tigrisdata.v1.CommitTransactionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.CommitTransactionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.CommitTransactionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.CommitTransactionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.CommitTransactionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.tigrisdata.v1.CommitTransactionResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.CommitTransactionResponse} returns this
 */
proto.tigrisdata.v1.CommitTransactionResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.RollbackTransactionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.RollbackTransactionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.RollbackTransactionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.RollbackTransactionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    db: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.RollbackTransactionRequest}
 */
proto.tigrisdata.v1.RollbackTransactionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.RollbackTransactionRequest;
  return proto.tigrisdata.v1.RollbackTransactionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.RollbackTransactionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.RollbackTransactionRequest}
 */
proto.tigrisdata.v1.RollbackTransactionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDb(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.RollbackTransactionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.RollbackTransactionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.RollbackTransactionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.RollbackTransactionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDb();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string db = 1;
 * @return {string}
 */
proto.tigrisdata.v1.RollbackTransactionRequest.prototype.getDb = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.RollbackTransactionRequest} returns this
 */
proto.tigrisdata.v1.RollbackTransactionRequest.prototype.setDb = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.RollbackTransactionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.RollbackTransactionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.RollbackTransactionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.RollbackTransactionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.RollbackTransactionResponse}
 */
proto.tigrisdata.v1.RollbackTransactionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.RollbackTransactionResponse;
  return proto.tigrisdata.v1.RollbackTransactionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.RollbackTransactionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.RollbackTransactionResponse}
 */
proto.tigrisdata.v1.RollbackTransactionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.RollbackTransactionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.RollbackTransactionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.RollbackTransactionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.RollbackTransactionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.tigrisdata.v1.RollbackTransactionResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.RollbackTransactionResponse} returns this
 */
proto.tigrisdata.v1.RollbackTransactionResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.InsertRequestOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.InsertRequestOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.InsertRequestOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.InsertRequestOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    writeOptions: (f = msg.getWriteOptions()) && proto.tigrisdata.v1.WriteOptions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.InsertRequestOptions}
 */
proto.tigrisdata.v1.InsertRequestOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.InsertRequestOptions;
  return proto.tigrisdata.v1.InsertRequestOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.InsertRequestOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.InsertRequestOptions}
 */
proto.tigrisdata.v1.InsertRequestOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tigrisdata.v1.WriteOptions;
      reader.readMessage(value,proto.tigrisdata.v1.WriteOptions.deserializeBinaryFromReader);
      msg.setWriteOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.InsertRequestOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.InsertRequestOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.InsertRequestOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.InsertRequestOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWriteOptions();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.tigrisdata.v1.WriteOptions.serializeBinaryToWriter
    );
  }
};


/**
 * optional WriteOptions write_options = 1;
 * @return {?proto.tigrisdata.v1.WriteOptions}
 */
proto.tigrisdata.v1.InsertRequestOptions.prototype.getWriteOptions = function() {
  return /** @type{?proto.tigrisdata.v1.WriteOptions} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.WriteOptions, 1));
};


/**
 * @param {?proto.tigrisdata.v1.WriteOptions|undefined} value
 * @return {!proto.tigrisdata.v1.InsertRequestOptions} returns this
*/
proto.tigrisdata.v1.InsertRequestOptions.prototype.setWriteOptions = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.InsertRequestOptions} returns this
 */
proto.tigrisdata.v1.InsertRequestOptions.prototype.clearWriteOptions = function() {
  return this.setWriteOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.InsertRequestOptions.prototype.hasWriteOptions = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.ResponseMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.ResponseMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.ResponseMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ResponseMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedAt: (f = msg.getUpdatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    deletedAt: (f = msg.getDeletedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.ResponseMetadata}
 */
proto.tigrisdata.v1.ResponseMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.ResponseMetadata;
  return proto.tigrisdata.v1.ResponseMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.ResponseMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.ResponseMetadata}
 */
proto.tigrisdata.v1.ResponseMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedAt(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDeletedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.ResponseMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.ResponseMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.ResponseMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ResponseMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedAt();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDeletedAt();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Timestamp created_at = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.tigrisdata.v1.ResponseMetadata.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.tigrisdata.v1.ResponseMetadata} returns this
*/
proto.tigrisdata.v1.ResponseMetadata.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.ResponseMetadata} returns this
 */
proto.tigrisdata.v1.ResponseMetadata.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.ResponseMetadata.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp updated_at = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.tigrisdata.v1.ResponseMetadata.prototype.getUpdatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.tigrisdata.v1.ResponseMetadata} returns this
*/
proto.tigrisdata.v1.ResponseMetadata.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.ResponseMetadata} returns this
 */
proto.tigrisdata.v1.ResponseMetadata.prototype.clearUpdatedAt = function() {
  return this.setUpdatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.ResponseMetadata.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp deleted_at = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.tigrisdata.v1.ResponseMetadata.prototype.getDeletedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.tigrisdata.v1.ResponseMetadata} returns this
*/
proto.tigrisdata.v1.ResponseMetadata.prototype.setDeletedAt = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.ResponseMetadata} returns this
 */
proto.tigrisdata.v1.ResponseMetadata.prototype.clearDeletedAt = function() {
  return this.setDeletedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.ResponseMetadata.prototype.hasDeletedAt = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tigrisdata.v1.InsertRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.InsertRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.InsertRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.InsertRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.InsertRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    db: jspb.Message.getFieldWithDefault(msg, 1, ""),
    collection: jspb.Message.getFieldWithDefault(msg, 2, ""),
    documentsList: msg.getDocumentsList_asB64(),
    options: (f = msg.getOptions()) && proto.tigrisdata.v1.InsertRequestOptions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.InsertRequest}
 */
proto.tigrisdata.v1.InsertRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.InsertRequest;
  return proto.tigrisdata.v1.InsertRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.InsertRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.InsertRequest}
 */
proto.tigrisdata.v1.InsertRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDb(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollection(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addDocuments(value);
      break;
    case 4:
      var value = new proto.tigrisdata.v1.InsertRequestOptions;
      reader.readMessage(value,proto.tigrisdata.v1.InsertRequestOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.InsertRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.InsertRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.InsertRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.InsertRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDb();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCollection();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDocumentsList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      3,
      f
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.tigrisdata.v1.InsertRequestOptions.serializeBinaryToWriter
    );
  }
};


/**
 * optional string db = 1;
 * @return {string}
 */
proto.tigrisdata.v1.InsertRequest.prototype.getDb = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.InsertRequest} returns this
 */
proto.tigrisdata.v1.InsertRequest.prototype.setDb = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string collection = 2;
 * @return {string}
 */
proto.tigrisdata.v1.InsertRequest.prototype.getCollection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.InsertRequest} returns this
 */
proto.tigrisdata.v1.InsertRequest.prototype.setCollection = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated bytes documents = 3;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.tigrisdata.v1.InsertRequest.prototype.getDocumentsList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * repeated bytes documents = 3;
 * This is a type-conversion wrapper around `getDocumentsList()`
 * @return {!Array<string>}
 */
proto.tigrisdata.v1.InsertRequest.prototype.getDocumentsList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getDocumentsList()));
};


/**
 * repeated bytes documents = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDocumentsList()`
 * @return {!Array<!Uint8Array>}
 */
proto.tigrisdata.v1.InsertRequest.prototype.getDocumentsList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getDocumentsList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.tigrisdata.v1.InsertRequest} returns this
 */
proto.tigrisdata.v1.InsertRequest.prototype.setDocumentsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.tigrisdata.v1.InsertRequest} returns this
 */
proto.tigrisdata.v1.InsertRequest.prototype.addDocuments = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tigrisdata.v1.InsertRequest} returns this
 */
proto.tigrisdata.v1.InsertRequest.prototype.clearDocumentsList = function() {
  return this.setDocumentsList([]);
};


/**
 * optional InsertRequestOptions options = 4;
 * @return {?proto.tigrisdata.v1.InsertRequestOptions}
 */
proto.tigrisdata.v1.InsertRequest.prototype.getOptions = function() {
  return /** @type{?proto.tigrisdata.v1.InsertRequestOptions} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.InsertRequestOptions, 4));
};


/**
 * @param {?proto.tigrisdata.v1.InsertRequestOptions|undefined} value
 * @return {!proto.tigrisdata.v1.InsertRequest} returns this
*/
proto.tigrisdata.v1.InsertRequest.prototype.setOptions = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.InsertRequest} returns this
 */
proto.tigrisdata.v1.InsertRequest.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.InsertRequest.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tigrisdata.v1.InsertResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.InsertResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.InsertResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.InsertResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.InsertResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && proto.tigrisdata.v1.ResponseMetadata.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 2, ""),
    keysList: msg.getKeysList_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.InsertResponse}
 */
proto.tigrisdata.v1.InsertResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.InsertResponse;
  return proto.tigrisdata.v1.InsertResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.InsertResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.InsertResponse}
 */
proto.tigrisdata.v1.InsertResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tigrisdata.v1.ResponseMetadata;
      reader.readMessage(value,proto.tigrisdata.v1.ResponseMetadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addKeys(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.InsertResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.InsertResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.InsertResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.InsertResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.tigrisdata.v1.ResponseMetadata.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getKeysList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      3,
      f
    );
  }
};


/**
 * optional ResponseMetadata metadata = 1;
 * @return {?proto.tigrisdata.v1.ResponseMetadata}
 */
proto.tigrisdata.v1.InsertResponse.prototype.getMetadata = function() {
  return /** @type{?proto.tigrisdata.v1.ResponseMetadata} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.ResponseMetadata, 1));
};


/**
 * @param {?proto.tigrisdata.v1.ResponseMetadata|undefined} value
 * @return {!proto.tigrisdata.v1.InsertResponse} returns this
*/
proto.tigrisdata.v1.InsertResponse.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.InsertResponse} returns this
 */
proto.tigrisdata.v1.InsertResponse.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.InsertResponse.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string status = 2;
 * @return {string}
 */
proto.tigrisdata.v1.InsertResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.InsertResponse} returns this
 */
proto.tigrisdata.v1.InsertResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated bytes keys = 3;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.tigrisdata.v1.InsertResponse.prototype.getKeysList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * repeated bytes keys = 3;
 * This is a type-conversion wrapper around `getKeysList()`
 * @return {!Array<string>}
 */
proto.tigrisdata.v1.InsertResponse.prototype.getKeysList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getKeysList()));
};


/**
 * repeated bytes keys = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getKeysList()`
 * @return {!Array<!Uint8Array>}
 */
proto.tigrisdata.v1.InsertResponse.prototype.getKeysList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getKeysList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.tigrisdata.v1.InsertResponse} returns this
 */
proto.tigrisdata.v1.InsertResponse.prototype.setKeysList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.tigrisdata.v1.InsertResponse} returns this
 */
proto.tigrisdata.v1.InsertResponse.prototype.addKeys = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tigrisdata.v1.InsertResponse} returns this
 */
proto.tigrisdata.v1.InsertResponse.prototype.clearKeysList = function() {
  return this.setKeysList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.ReplaceRequestOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.ReplaceRequestOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.ReplaceRequestOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ReplaceRequestOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    writeOptions: (f = msg.getWriteOptions()) && proto.tigrisdata.v1.WriteOptions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.ReplaceRequestOptions}
 */
proto.tigrisdata.v1.ReplaceRequestOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.ReplaceRequestOptions;
  return proto.tigrisdata.v1.ReplaceRequestOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.ReplaceRequestOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.ReplaceRequestOptions}
 */
proto.tigrisdata.v1.ReplaceRequestOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tigrisdata.v1.WriteOptions;
      reader.readMessage(value,proto.tigrisdata.v1.WriteOptions.deserializeBinaryFromReader);
      msg.setWriteOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.ReplaceRequestOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.ReplaceRequestOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.ReplaceRequestOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ReplaceRequestOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWriteOptions();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.tigrisdata.v1.WriteOptions.serializeBinaryToWriter
    );
  }
};


/**
 * optional WriteOptions write_options = 1;
 * @return {?proto.tigrisdata.v1.WriteOptions}
 */
proto.tigrisdata.v1.ReplaceRequestOptions.prototype.getWriteOptions = function() {
  return /** @type{?proto.tigrisdata.v1.WriteOptions} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.WriteOptions, 1));
};


/**
 * @param {?proto.tigrisdata.v1.WriteOptions|undefined} value
 * @return {!proto.tigrisdata.v1.ReplaceRequestOptions} returns this
*/
proto.tigrisdata.v1.ReplaceRequestOptions.prototype.setWriteOptions = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.ReplaceRequestOptions} returns this
 */
proto.tigrisdata.v1.ReplaceRequestOptions.prototype.clearWriteOptions = function() {
  return this.setWriteOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.ReplaceRequestOptions.prototype.hasWriteOptions = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tigrisdata.v1.ReplaceRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.ReplaceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.ReplaceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.ReplaceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ReplaceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    db: jspb.Message.getFieldWithDefault(msg, 1, ""),
    collection: jspb.Message.getFieldWithDefault(msg, 2, ""),
    documentsList: msg.getDocumentsList_asB64(),
    options: (f = msg.getOptions()) && proto.tigrisdata.v1.ReplaceRequestOptions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.ReplaceRequest}
 */
proto.tigrisdata.v1.ReplaceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.ReplaceRequest;
  return proto.tigrisdata.v1.ReplaceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.ReplaceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.ReplaceRequest}
 */
proto.tigrisdata.v1.ReplaceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDb(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollection(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addDocuments(value);
      break;
    case 4:
      var value = new proto.tigrisdata.v1.ReplaceRequestOptions;
      reader.readMessage(value,proto.tigrisdata.v1.ReplaceRequestOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.ReplaceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.ReplaceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.ReplaceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ReplaceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDb();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCollection();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDocumentsList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      3,
      f
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.tigrisdata.v1.ReplaceRequestOptions.serializeBinaryToWriter
    );
  }
};


/**
 * optional string db = 1;
 * @return {string}
 */
proto.tigrisdata.v1.ReplaceRequest.prototype.getDb = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.ReplaceRequest} returns this
 */
proto.tigrisdata.v1.ReplaceRequest.prototype.setDb = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string collection = 2;
 * @return {string}
 */
proto.tigrisdata.v1.ReplaceRequest.prototype.getCollection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.ReplaceRequest} returns this
 */
proto.tigrisdata.v1.ReplaceRequest.prototype.setCollection = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated bytes documents = 3;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.tigrisdata.v1.ReplaceRequest.prototype.getDocumentsList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * repeated bytes documents = 3;
 * This is a type-conversion wrapper around `getDocumentsList()`
 * @return {!Array<string>}
 */
proto.tigrisdata.v1.ReplaceRequest.prototype.getDocumentsList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getDocumentsList()));
};


/**
 * repeated bytes documents = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDocumentsList()`
 * @return {!Array<!Uint8Array>}
 */
proto.tigrisdata.v1.ReplaceRequest.prototype.getDocumentsList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getDocumentsList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.tigrisdata.v1.ReplaceRequest} returns this
 */
proto.tigrisdata.v1.ReplaceRequest.prototype.setDocumentsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.tigrisdata.v1.ReplaceRequest} returns this
 */
proto.tigrisdata.v1.ReplaceRequest.prototype.addDocuments = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tigrisdata.v1.ReplaceRequest} returns this
 */
proto.tigrisdata.v1.ReplaceRequest.prototype.clearDocumentsList = function() {
  return this.setDocumentsList([]);
};


/**
 * optional ReplaceRequestOptions options = 4;
 * @return {?proto.tigrisdata.v1.ReplaceRequestOptions}
 */
proto.tigrisdata.v1.ReplaceRequest.prototype.getOptions = function() {
  return /** @type{?proto.tigrisdata.v1.ReplaceRequestOptions} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.ReplaceRequestOptions, 4));
};


/**
 * @param {?proto.tigrisdata.v1.ReplaceRequestOptions|undefined} value
 * @return {!proto.tigrisdata.v1.ReplaceRequest} returns this
*/
proto.tigrisdata.v1.ReplaceRequest.prototype.setOptions = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.ReplaceRequest} returns this
 */
proto.tigrisdata.v1.ReplaceRequest.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.ReplaceRequest.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tigrisdata.v1.ReplaceResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.ReplaceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.ReplaceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.ReplaceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ReplaceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && proto.tigrisdata.v1.ResponseMetadata.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 2, ""),
    keysList: msg.getKeysList_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.ReplaceResponse}
 */
proto.tigrisdata.v1.ReplaceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.ReplaceResponse;
  return proto.tigrisdata.v1.ReplaceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.ReplaceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.ReplaceResponse}
 */
proto.tigrisdata.v1.ReplaceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tigrisdata.v1.ResponseMetadata;
      reader.readMessage(value,proto.tigrisdata.v1.ResponseMetadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addKeys(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.ReplaceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.ReplaceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.ReplaceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ReplaceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.tigrisdata.v1.ResponseMetadata.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getKeysList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      3,
      f
    );
  }
};


/**
 * optional ResponseMetadata metadata = 1;
 * @return {?proto.tigrisdata.v1.ResponseMetadata}
 */
proto.tigrisdata.v1.ReplaceResponse.prototype.getMetadata = function() {
  return /** @type{?proto.tigrisdata.v1.ResponseMetadata} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.ResponseMetadata, 1));
};


/**
 * @param {?proto.tigrisdata.v1.ResponseMetadata|undefined} value
 * @return {!proto.tigrisdata.v1.ReplaceResponse} returns this
*/
proto.tigrisdata.v1.ReplaceResponse.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.ReplaceResponse} returns this
 */
proto.tigrisdata.v1.ReplaceResponse.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.ReplaceResponse.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string status = 2;
 * @return {string}
 */
proto.tigrisdata.v1.ReplaceResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.ReplaceResponse} returns this
 */
proto.tigrisdata.v1.ReplaceResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated bytes keys = 3;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.tigrisdata.v1.ReplaceResponse.prototype.getKeysList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * repeated bytes keys = 3;
 * This is a type-conversion wrapper around `getKeysList()`
 * @return {!Array<string>}
 */
proto.tigrisdata.v1.ReplaceResponse.prototype.getKeysList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getKeysList()));
};


/**
 * repeated bytes keys = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getKeysList()`
 * @return {!Array<!Uint8Array>}
 */
proto.tigrisdata.v1.ReplaceResponse.prototype.getKeysList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getKeysList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.tigrisdata.v1.ReplaceResponse} returns this
 */
proto.tigrisdata.v1.ReplaceResponse.prototype.setKeysList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.tigrisdata.v1.ReplaceResponse} returns this
 */
proto.tigrisdata.v1.ReplaceResponse.prototype.addKeys = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tigrisdata.v1.ReplaceResponse} returns this
 */
proto.tigrisdata.v1.ReplaceResponse.prototype.clearKeysList = function() {
  return this.setKeysList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.DeleteRequestOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.DeleteRequestOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.DeleteRequestOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DeleteRequestOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    writeOptions: (f = msg.getWriteOptions()) && proto.tigrisdata.v1.WriteOptions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.DeleteRequestOptions}
 */
proto.tigrisdata.v1.DeleteRequestOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.DeleteRequestOptions;
  return proto.tigrisdata.v1.DeleteRequestOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.DeleteRequestOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.DeleteRequestOptions}
 */
proto.tigrisdata.v1.DeleteRequestOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tigrisdata.v1.WriteOptions;
      reader.readMessage(value,proto.tigrisdata.v1.WriteOptions.deserializeBinaryFromReader);
      msg.setWriteOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.DeleteRequestOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.DeleteRequestOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.DeleteRequestOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DeleteRequestOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWriteOptions();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.tigrisdata.v1.WriteOptions.serializeBinaryToWriter
    );
  }
};


/**
 * optional WriteOptions write_options = 1;
 * @return {?proto.tigrisdata.v1.WriteOptions}
 */
proto.tigrisdata.v1.DeleteRequestOptions.prototype.getWriteOptions = function() {
  return /** @type{?proto.tigrisdata.v1.WriteOptions} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.WriteOptions, 1));
};


/**
 * @param {?proto.tigrisdata.v1.WriteOptions|undefined} value
 * @return {!proto.tigrisdata.v1.DeleteRequestOptions} returns this
*/
proto.tigrisdata.v1.DeleteRequestOptions.prototype.setWriteOptions = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.DeleteRequestOptions} returns this
 */
proto.tigrisdata.v1.DeleteRequestOptions.prototype.clearWriteOptions = function() {
  return this.setWriteOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.DeleteRequestOptions.prototype.hasWriteOptions = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.DeleteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.DeleteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.DeleteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DeleteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    db: jspb.Message.getFieldWithDefault(msg, 1, ""),
    collection: jspb.Message.getFieldWithDefault(msg, 2, ""),
    filter: msg.getFilter_asB64(),
    options: (f = msg.getOptions()) && proto.tigrisdata.v1.DeleteRequestOptions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.DeleteRequest}
 */
proto.tigrisdata.v1.DeleteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.DeleteRequest;
  return proto.tigrisdata.v1.DeleteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.DeleteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.DeleteRequest}
 */
proto.tigrisdata.v1.DeleteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDb(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollection(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFilter(value);
      break;
    case 4:
      var value = new proto.tigrisdata.v1.DeleteRequestOptions;
      reader.readMessage(value,proto.tigrisdata.v1.DeleteRequestOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.DeleteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.DeleteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.DeleteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DeleteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDb();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCollection();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFilter_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.tigrisdata.v1.DeleteRequestOptions.serializeBinaryToWriter
    );
  }
};


/**
 * optional string db = 1;
 * @return {string}
 */
proto.tigrisdata.v1.DeleteRequest.prototype.getDb = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.DeleteRequest} returns this
 */
proto.tigrisdata.v1.DeleteRequest.prototype.setDb = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string collection = 2;
 * @return {string}
 */
proto.tigrisdata.v1.DeleteRequest.prototype.getCollection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.DeleteRequest} returns this
 */
proto.tigrisdata.v1.DeleteRequest.prototype.setCollection = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bytes filter = 3;
 * @return {!(string|Uint8Array)}
 */
proto.tigrisdata.v1.DeleteRequest.prototype.getFilter = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes filter = 3;
 * This is a type-conversion wrapper around `getFilter()`
 * @return {string}
 */
proto.tigrisdata.v1.DeleteRequest.prototype.getFilter_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFilter()));
};


/**
 * optional bytes filter = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFilter()`
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.DeleteRequest.prototype.getFilter_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFilter()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.tigrisdata.v1.DeleteRequest} returns this
 */
proto.tigrisdata.v1.DeleteRequest.prototype.setFilter = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional DeleteRequestOptions options = 4;
 * @return {?proto.tigrisdata.v1.DeleteRequestOptions}
 */
proto.tigrisdata.v1.DeleteRequest.prototype.getOptions = function() {
  return /** @type{?proto.tigrisdata.v1.DeleteRequestOptions} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.DeleteRequestOptions, 4));
};


/**
 * @param {?proto.tigrisdata.v1.DeleteRequestOptions|undefined} value
 * @return {!proto.tigrisdata.v1.DeleteRequest} returns this
*/
proto.tigrisdata.v1.DeleteRequest.prototype.setOptions = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.DeleteRequest} returns this
 */
proto.tigrisdata.v1.DeleteRequest.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.DeleteRequest.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.DeleteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.DeleteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.DeleteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DeleteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && proto.tigrisdata.v1.ResponseMetadata.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.DeleteResponse}
 */
proto.tigrisdata.v1.DeleteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.DeleteResponse;
  return proto.tigrisdata.v1.DeleteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.DeleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.DeleteResponse}
 */
proto.tigrisdata.v1.DeleteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tigrisdata.v1.ResponseMetadata;
      reader.readMessage(value,proto.tigrisdata.v1.ResponseMetadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.DeleteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.DeleteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.DeleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DeleteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.tigrisdata.v1.ResponseMetadata.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional ResponseMetadata metadata = 1;
 * @return {?proto.tigrisdata.v1.ResponseMetadata}
 */
proto.tigrisdata.v1.DeleteResponse.prototype.getMetadata = function() {
  return /** @type{?proto.tigrisdata.v1.ResponseMetadata} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.ResponseMetadata, 1));
};


/**
 * @param {?proto.tigrisdata.v1.ResponseMetadata|undefined} value
 * @return {!proto.tigrisdata.v1.DeleteResponse} returns this
*/
proto.tigrisdata.v1.DeleteResponse.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.DeleteResponse} returns this
 */
proto.tigrisdata.v1.DeleteResponse.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.DeleteResponse.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string status = 2;
 * @return {string}
 */
proto.tigrisdata.v1.DeleteResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.DeleteResponse} returns this
 */
proto.tigrisdata.v1.DeleteResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.UpdateRequestOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.UpdateRequestOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.UpdateRequestOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.UpdateRequestOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    writeOptions: (f = msg.getWriteOptions()) && proto.tigrisdata.v1.WriteOptions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.UpdateRequestOptions}
 */
proto.tigrisdata.v1.UpdateRequestOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.UpdateRequestOptions;
  return proto.tigrisdata.v1.UpdateRequestOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.UpdateRequestOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.UpdateRequestOptions}
 */
proto.tigrisdata.v1.UpdateRequestOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tigrisdata.v1.WriteOptions;
      reader.readMessage(value,proto.tigrisdata.v1.WriteOptions.deserializeBinaryFromReader);
      msg.setWriteOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.UpdateRequestOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.UpdateRequestOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.UpdateRequestOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.UpdateRequestOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWriteOptions();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.tigrisdata.v1.WriteOptions.serializeBinaryToWriter
    );
  }
};


/**
 * optional WriteOptions write_options = 1;
 * @return {?proto.tigrisdata.v1.WriteOptions}
 */
proto.tigrisdata.v1.UpdateRequestOptions.prototype.getWriteOptions = function() {
  return /** @type{?proto.tigrisdata.v1.WriteOptions} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.WriteOptions, 1));
};


/**
 * @param {?proto.tigrisdata.v1.WriteOptions|undefined} value
 * @return {!proto.tigrisdata.v1.UpdateRequestOptions} returns this
*/
proto.tigrisdata.v1.UpdateRequestOptions.prototype.setWriteOptions = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.UpdateRequestOptions} returns this
 */
proto.tigrisdata.v1.UpdateRequestOptions.prototype.clearWriteOptions = function() {
  return this.setWriteOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.UpdateRequestOptions.prototype.hasWriteOptions = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.UpdateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.UpdateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.UpdateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.UpdateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    db: jspb.Message.getFieldWithDefault(msg, 1, ""),
    collection: jspb.Message.getFieldWithDefault(msg, 2, ""),
    fields: msg.getFields_asB64(),
    filter: msg.getFilter_asB64(),
    options: (f = msg.getOptions()) && proto.tigrisdata.v1.UpdateRequestOptions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.UpdateRequest}
 */
proto.tigrisdata.v1.UpdateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.UpdateRequest;
  return proto.tigrisdata.v1.UpdateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.UpdateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.UpdateRequest}
 */
proto.tigrisdata.v1.UpdateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDb(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollection(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFields(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFilter(value);
      break;
    case 5:
      var value = new proto.tigrisdata.v1.UpdateRequestOptions;
      reader.readMessage(value,proto.tigrisdata.v1.UpdateRequestOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.UpdateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.UpdateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.UpdateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.UpdateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDb();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCollection();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFields_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getFilter_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.tigrisdata.v1.UpdateRequestOptions.serializeBinaryToWriter
    );
  }
};


/**
 * optional string db = 1;
 * @return {string}
 */
proto.tigrisdata.v1.UpdateRequest.prototype.getDb = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.UpdateRequest} returns this
 */
proto.tigrisdata.v1.UpdateRequest.prototype.setDb = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string collection = 2;
 * @return {string}
 */
proto.tigrisdata.v1.UpdateRequest.prototype.getCollection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.UpdateRequest} returns this
 */
proto.tigrisdata.v1.UpdateRequest.prototype.setCollection = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bytes fields = 3;
 * @return {!(string|Uint8Array)}
 */
proto.tigrisdata.v1.UpdateRequest.prototype.getFields = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes fields = 3;
 * This is a type-conversion wrapper around `getFields()`
 * @return {string}
 */
proto.tigrisdata.v1.UpdateRequest.prototype.getFields_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFields()));
};


/**
 * optional bytes fields = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFields()`
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.UpdateRequest.prototype.getFields_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFields()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.tigrisdata.v1.UpdateRequest} returns this
 */
proto.tigrisdata.v1.UpdateRequest.prototype.setFields = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional bytes filter = 4;
 * @return {!(string|Uint8Array)}
 */
proto.tigrisdata.v1.UpdateRequest.prototype.getFilter = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes filter = 4;
 * This is a type-conversion wrapper around `getFilter()`
 * @return {string}
 */
proto.tigrisdata.v1.UpdateRequest.prototype.getFilter_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFilter()));
};


/**
 * optional bytes filter = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFilter()`
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.UpdateRequest.prototype.getFilter_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFilter()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.tigrisdata.v1.UpdateRequest} returns this
 */
proto.tigrisdata.v1.UpdateRequest.prototype.setFilter = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional UpdateRequestOptions options = 5;
 * @return {?proto.tigrisdata.v1.UpdateRequestOptions}
 */
proto.tigrisdata.v1.UpdateRequest.prototype.getOptions = function() {
  return /** @type{?proto.tigrisdata.v1.UpdateRequestOptions} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.UpdateRequestOptions, 5));
};


/**
 * @param {?proto.tigrisdata.v1.UpdateRequestOptions|undefined} value
 * @return {!proto.tigrisdata.v1.UpdateRequest} returns this
*/
proto.tigrisdata.v1.UpdateRequest.prototype.setOptions = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.UpdateRequest} returns this
 */
proto.tigrisdata.v1.UpdateRequest.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.UpdateRequest.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.UpdateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.UpdateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.UpdateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.UpdateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && proto.tigrisdata.v1.ResponseMetadata.toObject(includeInstance, f),
    modifiedCount: jspb.Message.getFieldWithDefault(msg, 2, 0),
    status: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.UpdateResponse}
 */
proto.tigrisdata.v1.UpdateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.UpdateResponse;
  return proto.tigrisdata.v1.UpdateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.UpdateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.UpdateResponse}
 */
proto.tigrisdata.v1.UpdateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tigrisdata.v1.ResponseMetadata;
      reader.readMessage(value,proto.tigrisdata.v1.ResponseMetadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setModifiedCount(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.UpdateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.UpdateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.UpdateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.UpdateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.tigrisdata.v1.ResponseMetadata.serializeBinaryToWriter
    );
  }
  f = message.getModifiedCount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional ResponseMetadata metadata = 1;
 * @return {?proto.tigrisdata.v1.ResponseMetadata}
 */
proto.tigrisdata.v1.UpdateResponse.prototype.getMetadata = function() {
  return /** @type{?proto.tigrisdata.v1.ResponseMetadata} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.ResponseMetadata, 1));
};


/**
 * @param {?proto.tigrisdata.v1.ResponseMetadata|undefined} value
 * @return {!proto.tigrisdata.v1.UpdateResponse} returns this
*/
proto.tigrisdata.v1.UpdateResponse.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.UpdateResponse} returns this
 */
proto.tigrisdata.v1.UpdateResponse.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.UpdateResponse.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 modified_count = 2;
 * @return {number}
 */
proto.tigrisdata.v1.UpdateResponse.prototype.getModifiedCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.tigrisdata.v1.UpdateResponse} returns this
 */
proto.tigrisdata.v1.UpdateResponse.prototype.setModifiedCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string status = 3;
 * @return {string}
 */
proto.tigrisdata.v1.UpdateResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.UpdateResponse} returns this
 */
proto.tigrisdata.v1.UpdateResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.ReadRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.ReadRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.ReadRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ReadRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    db: jspb.Message.getFieldWithDefault(msg, 1, ""),
    collection: jspb.Message.getFieldWithDefault(msg, 2, ""),
    filter: msg.getFilter_asB64(),
    fields: msg.getFields_asB64(),
    options: (f = msg.getOptions()) && proto.tigrisdata.v1.ReadRequestOptions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.ReadRequest}
 */
proto.tigrisdata.v1.ReadRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.ReadRequest;
  return proto.tigrisdata.v1.ReadRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.ReadRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.ReadRequest}
 */
proto.tigrisdata.v1.ReadRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDb(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollection(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFilter(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFields(value);
      break;
    case 5:
      var value = new proto.tigrisdata.v1.ReadRequestOptions;
      reader.readMessage(value,proto.tigrisdata.v1.ReadRequestOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.ReadRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.ReadRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.ReadRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ReadRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDb();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCollection();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFilter_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getFields_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.tigrisdata.v1.ReadRequestOptions.serializeBinaryToWriter
    );
  }
};


/**
 * optional string db = 1;
 * @return {string}
 */
proto.tigrisdata.v1.ReadRequest.prototype.getDb = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.ReadRequest} returns this
 */
proto.tigrisdata.v1.ReadRequest.prototype.setDb = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string collection = 2;
 * @return {string}
 */
proto.tigrisdata.v1.ReadRequest.prototype.getCollection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.ReadRequest} returns this
 */
proto.tigrisdata.v1.ReadRequest.prototype.setCollection = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bytes filter = 3;
 * @return {!(string|Uint8Array)}
 */
proto.tigrisdata.v1.ReadRequest.prototype.getFilter = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes filter = 3;
 * This is a type-conversion wrapper around `getFilter()`
 * @return {string}
 */
proto.tigrisdata.v1.ReadRequest.prototype.getFilter_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFilter()));
};


/**
 * optional bytes filter = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFilter()`
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.ReadRequest.prototype.getFilter_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFilter()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.tigrisdata.v1.ReadRequest} returns this
 */
proto.tigrisdata.v1.ReadRequest.prototype.setFilter = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional bytes fields = 4;
 * @return {!(string|Uint8Array)}
 */
proto.tigrisdata.v1.ReadRequest.prototype.getFields = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes fields = 4;
 * This is a type-conversion wrapper around `getFields()`
 * @return {string}
 */
proto.tigrisdata.v1.ReadRequest.prototype.getFields_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFields()));
};


/**
 * optional bytes fields = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFields()`
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.ReadRequest.prototype.getFields_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFields()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.tigrisdata.v1.ReadRequest} returns this
 */
proto.tigrisdata.v1.ReadRequest.prototype.setFields = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional ReadRequestOptions options = 5;
 * @return {?proto.tigrisdata.v1.ReadRequestOptions}
 */
proto.tigrisdata.v1.ReadRequest.prototype.getOptions = function() {
  return /** @type{?proto.tigrisdata.v1.ReadRequestOptions} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.ReadRequestOptions, 5));
};


/**
 * @param {?proto.tigrisdata.v1.ReadRequestOptions|undefined} value
 * @return {!proto.tigrisdata.v1.ReadRequest} returns this
*/
proto.tigrisdata.v1.ReadRequest.prototype.setOptions = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.ReadRequest} returns this
 */
proto.tigrisdata.v1.ReadRequest.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.ReadRequest.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.ReadResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.ReadResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.ReadResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ReadResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: msg.getData_asB64(),
    resumeToken: msg.getResumeToken_asB64(),
    metadata: (f = msg.getMetadata()) && proto.tigrisdata.v1.ResponseMetadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.ReadResponse}
 */
proto.tigrisdata.v1.ReadResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.ReadResponse;
  return proto.tigrisdata.v1.ReadResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.ReadResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.ReadResponse}
 */
proto.tigrisdata.v1.ReadResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setResumeToken(value);
      break;
    case 3:
      var value = new proto.tigrisdata.v1.ResponseMetadata;
      reader.readMessage(value,proto.tigrisdata.v1.ResponseMetadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.ReadResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.ReadResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.ReadResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ReadResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getResumeToken_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.tigrisdata.v1.ResponseMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes data = 1;
 * @return {!(string|Uint8Array)}
 */
proto.tigrisdata.v1.ReadResponse.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes data = 1;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.tigrisdata.v1.ReadResponse.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.ReadResponse.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.tigrisdata.v1.ReadResponse} returns this
 */
proto.tigrisdata.v1.ReadResponse.prototype.setData = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes resume_token = 2;
 * @return {!(string|Uint8Array)}
 */
proto.tigrisdata.v1.ReadResponse.prototype.getResumeToken = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes resume_token = 2;
 * This is a type-conversion wrapper around `getResumeToken()`
 * @return {string}
 */
proto.tigrisdata.v1.ReadResponse.prototype.getResumeToken_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getResumeToken()));
};


/**
 * optional bytes resume_token = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getResumeToken()`
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.ReadResponse.prototype.getResumeToken_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getResumeToken()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.tigrisdata.v1.ReadResponse} returns this
 */
proto.tigrisdata.v1.ReadResponse.prototype.setResumeToken = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional ResponseMetadata metadata = 3;
 * @return {?proto.tigrisdata.v1.ResponseMetadata}
 */
proto.tigrisdata.v1.ReadResponse.prototype.getMetadata = function() {
  return /** @type{?proto.tigrisdata.v1.ResponseMetadata} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.ResponseMetadata, 3));
};


/**
 * @param {?proto.tigrisdata.v1.ResponseMetadata|undefined} value
 * @return {!proto.tigrisdata.v1.ReadResponse} returns this
*/
proto.tigrisdata.v1.ReadResponse.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.ReadResponse} returns this
 */
proto.tigrisdata.v1.ReadResponse.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.ReadResponse.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tigrisdata.v1.SearchRequest.repeatedFields_ = [4,8,9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.SearchRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.SearchRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.SearchRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.SearchRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    db: jspb.Message.getFieldWithDefault(msg, 1, ""),
    collection: jspb.Message.getFieldWithDefault(msg, 2, ""),
    q: jspb.Message.getFieldWithDefault(msg, 3, ""),
    searchFieldsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    filter: msg.getFilter_asB64(),
    facet: msg.getFacet_asB64(),
    sort: msg.getSort_asB64(),
    includeFieldsList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f,
    excludeFieldsList: (f = jspb.Message.getRepeatedField(msg, 9)) == null ? undefined : f,
    pageSize: jspb.Message.getFieldWithDefault(msg, 10, 0),
    page: jspb.Message.getFieldWithDefault(msg, 11, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.SearchRequest}
 */
proto.tigrisdata.v1.SearchRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.SearchRequest;
  return proto.tigrisdata.v1.SearchRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.SearchRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.SearchRequest}
 */
proto.tigrisdata.v1.SearchRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDb(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollection(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setQ(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addSearchFields(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFilter(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFacet(value);
      break;
    case 7:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSort(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.addIncludeFields(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.addExcludeFields(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.SearchRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.SearchRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.SearchRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.SearchRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDb();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCollection();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getQ();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSearchFieldsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getFilter_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      5,
      f
    );
  }
  f = message.getFacet_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = message.getSort_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      7,
      f
    );
  }
  f = message.getIncludeFieldsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f
    );
  }
  f = message.getExcludeFieldsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      9,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
};


/**
 * optional string db = 1;
 * @return {string}
 */
proto.tigrisdata.v1.SearchRequest.prototype.getDb = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.SearchRequest} returns this
 */
proto.tigrisdata.v1.SearchRequest.prototype.setDb = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string collection = 2;
 * @return {string}
 */
proto.tigrisdata.v1.SearchRequest.prototype.getCollection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.SearchRequest} returns this
 */
proto.tigrisdata.v1.SearchRequest.prototype.setCollection = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string q = 3;
 * @return {string}
 */
proto.tigrisdata.v1.SearchRequest.prototype.getQ = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.SearchRequest} returns this
 */
proto.tigrisdata.v1.SearchRequest.prototype.setQ = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated string search_fields = 4;
 * @return {!Array<string>}
 */
proto.tigrisdata.v1.SearchRequest.prototype.getSearchFieldsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.tigrisdata.v1.SearchRequest} returns this
 */
proto.tigrisdata.v1.SearchRequest.prototype.setSearchFieldsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.tigrisdata.v1.SearchRequest} returns this
 */
proto.tigrisdata.v1.SearchRequest.prototype.addSearchFields = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tigrisdata.v1.SearchRequest} returns this
 */
proto.tigrisdata.v1.SearchRequest.prototype.clearSearchFieldsList = function() {
  return this.setSearchFieldsList([]);
};


/**
 * optional bytes filter = 5;
 * @return {!(string|Uint8Array)}
 */
proto.tigrisdata.v1.SearchRequest.prototype.getFilter = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes filter = 5;
 * This is a type-conversion wrapper around `getFilter()`
 * @return {string}
 */
proto.tigrisdata.v1.SearchRequest.prototype.getFilter_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFilter()));
};


/**
 * optional bytes filter = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFilter()`
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.SearchRequest.prototype.getFilter_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFilter()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.tigrisdata.v1.SearchRequest} returns this
 */
proto.tigrisdata.v1.SearchRequest.prototype.setFilter = function(value) {
  return jspb.Message.setProto3BytesField(this, 5, value);
};


/**
 * optional bytes facet = 6;
 * @return {!(string|Uint8Array)}
 */
proto.tigrisdata.v1.SearchRequest.prototype.getFacet = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes facet = 6;
 * This is a type-conversion wrapper around `getFacet()`
 * @return {string}
 */
proto.tigrisdata.v1.SearchRequest.prototype.getFacet_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFacet()));
};


/**
 * optional bytes facet = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFacet()`
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.SearchRequest.prototype.getFacet_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFacet()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.tigrisdata.v1.SearchRequest} returns this
 */
proto.tigrisdata.v1.SearchRequest.prototype.setFacet = function(value) {
  return jspb.Message.setProto3BytesField(this, 6, value);
};


/**
 * optional bytes sort = 7;
 * @return {!(string|Uint8Array)}
 */
proto.tigrisdata.v1.SearchRequest.prototype.getSort = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * optional bytes sort = 7;
 * This is a type-conversion wrapper around `getSort()`
 * @return {string}
 */
proto.tigrisdata.v1.SearchRequest.prototype.getSort_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSort()));
};


/**
 * optional bytes sort = 7;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSort()`
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.SearchRequest.prototype.getSort_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSort()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.tigrisdata.v1.SearchRequest} returns this
 */
proto.tigrisdata.v1.SearchRequest.prototype.setSort = function(value) {
  return jspb.Message.setProto3BytesField(this, 7, value);
};


/**
 * repeated string include_fields = 8;
 * @return {!Array<string>}
 */
proto.tigrisdata.v1.SearchRequest.prototype.getIncludeFieldsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.tigrisdata.v1.SearchRequest} returns this
 */
proto.tigrisdata.v1.SearchRequest.prototype.setIncludeFieldsList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.tigrisdata.v1.SearchRequest} returns this
 */
proto.tigrisdata.v1.SearchRequest.prototype.addIncludeFields = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tigrisdata.v1.SearchRequest} returns this
 */
proto.tigrisdata.v1.SearchRequest.prototype.clearIncludeFieldsList = function() {
  return this.setIncludeFieldsList([]);
};


/**
 * repeated string exclude_fields = 9;
 * @return {!Array<string>}
 */
proto.tigrisdata.v1.SearchRequest.prototype.getExcludeFieldsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 9));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.tigrisdata.v1.SearchRequest} returns this
 */
proto.tigrisdata.v1.SearchRequest.prototype.setExcludeFieldsList = function(value) {
  return jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.tigrisdata.v1.SearchRequest} returns this
 */
proto.tigrisdata.v1.SearchRequest.prototype.addExcludeFields = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tigrisdata.v1.SearchRequest} returns this
 */
proto.tigrisdata.v1.SearchRequest.prototype.clearExcludeFieldsList = function() {
  return this.setExcludeFieldsList([]);
};


/**
 * optional int32 page_size = 10;
 * @return {number}
 */
proto.tigrisdata.v1.SearchRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.tigrisdata.v1.SearchRequest} returns this
 */
proto.tigrisdata.v1.SearchRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int32 page = 11;
 * @return {number}
 */
proto.tigrisdata.v1.SearchRequest.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.tigrisdata.v1.SearchRequest} returns this
 */
proto.tigrisdata.v1.SearchRequest.prototype.setPage = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tigrisdata.v1.SearchResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.SearchResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.SearchResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.SearchResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.SearchResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    hitsList: jspb.Message.toObjectList(msg.getHitsList(),
    proto.tigrisdata.v1.SearchHit.toObject, includeInstance),
    facetsMap: (f = msg.getFacetsMap()) ? f.toObject(includeInstance, proto.tigrisdata.v1.SearchFacet.toObject) : [],
    meta: (f = msg.getMeta()) && proto.tigrisdata.v1.SearchMetadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.SearchResponse}
 */
proto.tigrisdata.v1.SearchResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.SearchResponse;
  return proto.tigrisdata.v1.SearchResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.SearchResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.SearchResponse}
 */
proto.tigrisdata.v1.SearchResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tigrisdata.v1.SearchHit;
      reader.readMessage(value,proto.tigrisdata.v1.SearchHit.deserializeBinaryFromReader);
      msg.addHits(value);
      break;
    case 2:
      var value = msg.getFacetsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.tigrisdata.v1.SearchFacet.deserializeBinaryFromReader, "", new proto.tigrisdata.v1.SearchFacet());
         });
      break;
    case 3:
      var value = new proto.tigrisdata.v1.SearchMetadata;
      reader.readMessage(value,proto.tigrisdata.v1.SearchMetadata.deserializeBinaryFromReader);
      msg.setMeta(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.SearchResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.SearchResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.SearchResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.SearchResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHitsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.tigrisdata.v1.SearchHit.serializeBinaryToWriter
    );
  }
  f = message.getFacetsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.tigrisdata.v1.SearchFacet.serializeBinaryToWriter);
  }
  f = message.getMeta();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.tigrisdata.v1.SearchMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SearchHit hits = 1;
 * @return {!Array<!proto.tigrisdata.v1.SearchHit>}
 */
proto.tigrisdata.v1.SearchResponse.prototype.getHitsList = function() {
  return /** @type{!Array<!proto.tigrisdata.v1.SearchHit>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tigrisdata.v1.SearchHit, 1));
};


/**
 * @param {!Array<!proto.tigrisdata.v1.SearchHit>} value
 * @return {!proto.tigrisdata.v1.SearchResponse} returns this
*/
proto.tigrisdata.v1.SearchResponse.prototype.setHitsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.tigrisdata.v1.SearchHit=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tigrisdata.v1.SearchHit}
 */
proto.tigrisdata.v1.SearchResponse.prototype.addHits = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.tigrisdata.v1.SearchHit, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tigrisdata.v1.SearchResponse} returns this
 */
proto.tigrisdata.v1.SearchResponse.prototype.clearHitsList = function() {
  return this.setHitsList([]);
};


/**
 * map<string, SearchFacet> facets = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.tigrisdata.v1.SearchFacet>}
 */
proto.tigrisdata.v1.SearchResponse.prototype.getFacetsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.tigrisdata.v1.SearchFacet>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.tigrisdata.v1.SearchFacet));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.tigrisdata.v1.SearchResponse} returns this
 */
proto.tigrisdata.v1.SearchResponse.prototype.clearFacetsMap = function() {
  this.getFacetsMap().clear();
  return this;};


/**
 * optional SearchMetadata meta = 3;
 * @return {?proto.tigrisdata.v1.SearchMetadata}
 */
proto.tigrisdata.v1.SearchResponse.prototype.getMeta = function() {
  return /** @type{?proto.tigrisdata.v1.SearchMetadata} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.SearchMetadata, 3));
};


/**
 * @param {?proto.tigrisdata.v1.SearchMetadata|undefined} value
 * @return {!proto.tigrisdata.v1.SearchResponse} returns this
*/
proto.tigrisdata.v1.SearchResponse.prototype.setMeta = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.SearchResponse} returns this
 */
proto.tigrisdata.v1.SearchResponse.prototype.clearMeta = function() {
  return this.setMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.SearchResponse.prototype.hasMeta = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.SearchHit.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.SearchHit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.SearchHit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.SearchHit.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: msg.getData_asB64(),
    metadata: (f = msg.getMetadata()) && proto.tigrisdata.v1.SearchHitMeta.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.SearchHit}
 */
proto.tigrisdata.v1.SearchHit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.SearchHit;
  return proto.tigrisdata.v1.SearchHit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.SearchHit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.SearchHit}
 */
proto.tigrisdata.v1.SearchHit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    case 2:
      var value = new proto.tigrisdata.v1.SearchHitMeta;
      reader.readMessage(value,proto.tigrisdata.v1.SearchHitMeta.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.SearchHit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.SearchHit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.SearchHit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.SearchHit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.tigrisdata.v1.SearchHitMeta.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes data = 1;
 * @return {!(string|Uint8Array)}
 */
proto.tigrisdata.v1.SearchHit.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes data = 1;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.tigrisdata.v1.SearchHit.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.SearchHit.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.tigrisdata.v1.SearchHit} returns this
 */
proto.tigrisdata.v1.SearchHit.prototype.setData = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional SearchHitMeta metadata = 2;
 * @return {?proto.tigrisdata.v1.SearchHitMeta}
 */
proto.tigrisdata.v1.SearchHit.prototype.getMetadata = function() {
  return /** @type{?proto.tigrisdata.v1.SearchHitMeta} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.SearchHitMeta, 2));
};


/**
 * @param {?proto.tigrisdata.v1.SearchHitMeta|undefined} value
 * @return {!proto.tigrisdata.v1.SearchHit} returns this
*/
proto.tigrisdata.v1.SearchHit.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.SearchHit} returns this
 */
proto.tigrisdata.v1.SearchHit.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.SearchHit.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.SearchHitMeta.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.SearchHitMeta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.SearchHitMeta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.SearchHitMeta.toObject = function(includeInstance, msg) {
  var f, obj = {
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedAt: (f = msg.getUpdatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.SearchHitMeta}
 */
proto.tigrisdata.v1.SearchHitMeta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.SearchHitMeta;
  return proto.tigrisdata.v1.SearchHitMeta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.SearchHitMeta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.SearchHitMeta}
 */
proto.tigrisdata.v1.SearchHitMeta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.SearchHitMeta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.SearchHitMeta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.SearchHitMeta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.SearchHitMeta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedAt();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Timestamp created_at = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.tigrisdata.v1.SearchHitMeta.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.tigrisdata.v1.SearchHitMeta} returns this
*/
proto.tigrisdata.v1.SearchHitMeta.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.SearchHitMeta} returns this
 */
proto.tigrisdata.v1.SearchHitMeta.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.SearchHitMeta.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp updated_at = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.tigrisdata.v1.SearchHitMeta.prototype.getUpdatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.tigrisdata.v1.SearchHitMeta} returns this
*/
proto.tigrisdata.v1.SearchHitMeta.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.SearchHitMeta} returns this
 */
proto.tigrisdata.v1.SearchHitMeta.prototype.clearUpdatedAt = function() {
  return this.setUpdatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.SearchHitMeta.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tigrisdata.v1.SearchFacet.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.SearchFacet.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.SearchFacet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.SearchFacet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.SearchFacet.toObject = function(includeInstance, msg) {
  var f, obj = {
    countsList: jspb.Message.toObjectList(msg.getCountsList(),
    proto.tigrisdata.v1.FacetCount.toObject, includeInstance),
    stats: (f = msg.getStats()) && proto.tigrisdata.v1.FacetStats.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.SearchFacet}
 */
proto.tigrisdata.v1.SearchFacet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.SearchFacet;
  return proto.tigrisdata.v1.SearchFacet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.SearchFacet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.SearchFacet}
 */
proto.tigrisdata.v1.SearchFacet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tigrisdata.v1.FacetCount;
      reader.readMessage(value,proto.tigrisdata.v1.FacetCount.deserializeBinaryFromReader);
      msg.addCounts(value);
      break;
    case 2:
      var value = new proto.tigrisdata.v1.FacetStats;
      reader.readMessage(value,proto.tigrisdata.v1.FacetStats.deserializeBinaryFromReader);
      msg.setStats(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.SearchFacet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.SearchFacet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.SearchFacet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.SearchFacet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCountsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.tigrisdata.v1.FacetCount.serializeBinaryToWriter
    );
  }
  f = message.getStats();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.tigrisdata.v1.FacetStats.serializeBinaryToWriter
    );
  }
};


/**
 * repeated FacetCount counts = 1;
 * @return {!Array<!proto.tigrisdata.v1.FacetCount>}
 */
proto.tigrisdata.v1.SearchFacet.prototype.getCountsList = function() {
  return /** @type{!Array<!proto.tigrisdata.v1.FacetCount>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tigrisdata.v1.FacetCount, 1));
};


/**
 * @param {!Array<!proto.tigrisdata.v1.FacetCount>} value
 * @return {!proto.tigrisdata.v1.SearchFacet} returns this
*/
proto.tigrisdata.v1.SearchFacet.prototype.setCountsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.tigrisdata.v1.FacetCount=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tigrisdata.v1.FacetCount}
 */
proto.tigrisdata.v1.SearchFacet.prototype.addCounts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.tigrisdata.v1.FacetCount, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tigrisdata.v1.SearchFacet} returns this
 */
proto.tigrisdata.v1.SearchFacet.prototype.clearCountsList = function() {
  return this.setCountsList([]);
};


/**
 * optional FacetStats stats = 2;
 * @return {?proto.tigrisdata.v1.FacetStats}
 */
proto.tigrisdata.v1.SearchFacet.prototype.getStats = function() {
  return /** @type{?proto.tigrisdata.v1.FacetStats} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.FacetStats, 2));
};


/**
 * @param {?proto.tigrisdata.v1.FacetStats|undefined} value
 * @return {!proto.tigrisdata.v1.SearchFacet} returns this
*/
proto.tigrisdata.v1.SearchFacet.prototype.setStats = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.SearchFacet} returns this
 */
proto.tigrisdata.v1.SearchFacet.prototype.clearStats = function() {
  return this.setStats(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.SearchFacet.prototype.hasStats = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.FacetCount.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.FacetCount.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.FacetCount} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.FacetCount.toObject = function(includeInstance, msg) {
  var f, obj = {
    count: jspb.Message.getFieldWithDefault(msg, 1, 0),
    value: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.FacetCount}
 */
proto.tigrisdata.v1.FacetCount.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.FacetCount;
  return proto.tigrisdata.v1.FacetCount.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.FacetCount} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.FacetCount}
 */
proto.tigrisdata.v1.FacetCount.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCount(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.FacetCount.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.FacetCount.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.FacetCount} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.FacetCount.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int64 count = 1;
 * @return {number}
 */
proto.tigrisdata.v1.FacetCount.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.tigrisdata.v1.FacetCount} returns this
 */
proto.tigrisdata.v1.FacetCount.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.tigrisdata.v1.FacetCount.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.FacetCount} returns this
 */
proto.tigrisdata.v1.FacetCount.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.FacetStats.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.FacetStats.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.FacetStats} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.FacetStats.toObject = function(includeInstance, msg) {
  var f, obj = {
    avg: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    max: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    min: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    sum: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    count: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.FacetStats}
 */
proto.tigrisdata.v1.FacetStats.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.FacetStats;
  return proto.tigrisdata.v1.FacetStats.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.FacetStats} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.FacetStats}
 */
proto.tigrisdata.v1.FacetStats.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAvg(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMax(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMin(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSum(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.FacetStats.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.FacetStats.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.FacetStats} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.FacetStats.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
};


/**
 * optional double avg = 1;
 * @return {number}
 */
proto.tigrisdata.v1.FacetStats.prototype.getAvg = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.tigrisdata.v1.FacetStats} returns this
 */
proto.tigrisdata.v1.FacetStats.prototype.setAvg = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tigrisdata.v1.FacetStats} returns this
 */
proto.tigrisdata.v1.FacetStats.prototype.clearAvg = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.FacetStats.prototype.hasAvg = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double max = 2;
 * @return {number}
 */
proto.tigrisdata.v1.FacetStats.prototype.getMax = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.tigrisdata.v1.FacetStats} returns this
 */
proto.tigrisdata.v1.FacetStats.prototype.setMax = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tigrisdata.v1.FacetStats} returns this
 */
proto.tigrisdata.v1.FacetStats.prototype.clearMax = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.FacetStats.prototype.hasMax = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double min = 3;
 * @return {number}
 */
proto.tigrisdata.v1.FacetStats.prototype.getMin = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.tigrisdata.v1.FacetStats} returns this
 */
proto.tigrisdata.v1.FacetStats.prototype.setMin = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tigrisdata.v1.FacetStats} returns this
 */
proto.tigrisdata.v1.FacetStats.prototype.clearMin = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.FacetStats.prototype.hasMin = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double sum = 4;
 * @return {number}
 */
proto.tigrisdata.v1.FacetStats.prototype.getSum = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.tigrisdata.v1.FacetStats} returns this
 */
proto.tigrisdata.v1.FacetStats.prototype.setSum = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.tigrisdata.v1.FacetStats} returns this
 */
proto.tigrisdata.v1.FacetStats.prototype.clearSum = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.FacetStats.prototype.hasSum = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int64 count = 5;
 * @return {number}
 */
proto.tigrisdata.v1.FacetStats.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.tigrisdata.v1.FacetStats} returns this
 */
proto.tigrisdata.v1.FacetStats.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.SearchMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.SearchMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.SearchMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.SearchMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    found: jspb.Message.getFieldWithDefault(msg, 1, 0),
    totalPages: jspb.Message.getFieldWithDefault(msg, 2, 0),
    page: (f = msg.getPage()) && proto.tigrisdata.v1.Page.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.SearchMetadata}
 */
proto.tigrisdata.v1.SearchMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.SearchMetadata;
  return proto.tigrisdata.v1.SearchMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.SearchMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.SearchMetadata}
 */
proto.tigrisdata.v1.SearchMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFound(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalPages(value);
      break;
    case 3:
      var value = new proto.tigrisdata.v1.Page;
      reader.readMessage(value,proto.tigrisdata.v1.Page.deserializeBinaryFromReader);
      msg.setPage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.SearchMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.SearchMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.SearchMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.SearchMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFound();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getTotalPages();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getPage();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.tigrisdata.v1.Page.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 found = 1;
 * @return {number}
 */
proto.tigrisdata.v1.SearchMetadata.prototype.getFound = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.tigrisdata.v1.SearchMetadata} returns this
 */
proto.tigrisdata.v1.SearchMetadata.prototype.setFound = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 total_pages = 2;
 * @return {number}
 */
proto.tigrisdata.v1.SearchMetadata.prototype.getTotalPages = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.tigrisdata.v1.SearchMetadata} returns this
 */
proto.tigrisdata.v1.SearchMetadata.prototype.setTotalPages = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional Page page = 3;
 * @return {?proto.tigrisdata.v1.Page}
 */
proto.tigrisdata.v1.SearchMetadata.prototype.getPage = function() {
  return /** @type{?proto.tigrisdata.v1.Page} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.Page, 3));
};


/**
 * @param {?proto.tigrisdata.v1.Page|undefined} value
 * @return {!proto.tigrisdata.v1.SearchMetadata} returns this
*/
proto.tigrisdata.v1.SearchMetadata.prototype.setPage = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.SearchMetadata} returns this
 */
proto.tigrisdata.v1.SearchMetadata.prototype.clearPage = function() {
  return this.setPage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.SearchMetadata.prototype.hasPage = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.Page.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.Page.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.Page} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.Page.toObject = function(includeInstance, msg) {
  var f, obj = {
    current: jspb.Message.getFieldWithDefault(msg, 1, 0),
    size: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.Page}
 */
proto.tigrisdata.v1.Page.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.Page;
  return proto.tigrisdata.v1.Page.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.Page} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.Page}
 */
proto.tigrisdata.v1.Page.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCurrent(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.Page.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.Page.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.Page} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.Page.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCurrent();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional int32 current = 1;
 * @return {number}
 */
proto.tigrisdata.v1.Page.prototype.getCurrent = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.tigrisdata.v1.Page} returns this
 */
proto.tigrisdata.v1.Page.prototype.setCurrent = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 size = 3;
 * @return {number}
 */
proto.tigrisdata.v1.Page.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.tigrisdata.v1.Page} returns this
 */
proto.tigrisdata.v1.Page.prototype.setSize = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.CreateDatabaseRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.CreateDatabaseRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.CreateDatabaseRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.CreateDatabaseRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    db: jspb.Message.getFieldWithDefault(msg, 1, ""),
    options: (f = msg.getOptions()) && proto.tigrisdata.v1.DatabaseOptions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.CreateDatabaseRequest}
 */
proto.tigrisdata.v1.CreateDatabaseRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.CreateDatabaseRequest;
  return proto.tigrisdata.v1.CreateDatabaseRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.CreateDatabaseRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.CreateDatabaseRequest}
 */
proto.tigrisdata.v1.CreateDatabaseRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDb(value);
      break;
    case 2:
      var value = new proto.tigrisdata.v1.DatabaseOptions;
      reader.readMessage(value,proto.tigrisdata.v1.DatabaseOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.CreateDatabaseRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.CreateDatabaseRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.CreateDatabaseRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.CreateDatabaseRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDb();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.tigrisdata.v1.DatabaseOptions.serializeBinaryToWriter
    );
  }
};


/**
 * optional string db = 1;
 * @return {string}
 */
proto.tigrisdata.v1.CreateDatabaseRequest.prototype.getDb = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.CreateDatabaseRequest} returns this
 */
proto.tigrisdata.v1.CreateDatabaseRequest.prototype.setDb = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional DatabaseOptions options = 2;
 * @return {?proto.tigrisdata.v1.DatabaseOptions}
 */
proto.tigrisdata.v1.CreateDatabaseRequest.prototype.getOptions = function() {
  return /** @type{?proto.tigrisdata.v1.DatabaseOptions} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.DatabaseOptions, 2));
};


/**
 * @param {?proto.tigrisdata.v1.DatabaseOptions|undefined} value
 * @return {!proto.tigrisdata.v1.CreateDatabaseRequest} returns this
*/
proto.tigrisdata.v1.CreateDatabaseRequest.prototype.setOptions = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.CreateDatabaseRequest} returns this
 */
proto.tigrisdata.v1.CreateDatabaseRequest.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.CreateDatabaseRequest.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.CreateDatabaseResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.CreateDatabaseResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.CreateDatabaseResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.CreateDatabaseResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.CreateDatabaseResponse}
 */
proto.tigrisdata.v1.CreateDatabaseResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.CreateDatabaseResponse;
  return proto.tigrisdata.v1.CreateDatabaseResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.CreateDatabaseResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.CreateDatabaseResponse}
 */
proto.tigrisdata.v1.CreateDatabaseResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.CreateDatabaseResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.CreateDatabaseResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.CreateDatabaseResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.CreateDatabaseResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.tigrisdata.v1.CreateDatabaseResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.CreateDatabaseResponse} returns this
 */
proto.tigrisdata.v1.CreateDatabaseResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string status = 2;
 * @return {string}
 */
proto.tigrisdata.v1.CreateDatabaseResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.CreateDatabaseResponse} returns this
 */
proto.tigrisdata.v1.CreateDatabaseResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.DropDatabaseRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.DropDatabaseRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.DropDatabaseRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DropDatabaseRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    db: jspb.Message.getFieldWithDefault(msg, 1, ""),
    options: (f = msg.getOptions()) && proto.tigrisdata.v1.DatabaseOptions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.DropDatabaseRequest}
 */
proto.tigrisdata.v1.DropDatabaseRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.DropDatabaseRequest;
  return proto.tigrisdata.v1.DropDatabaseRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.DropDatabaseRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.DropDatabaseRequest}
 */
proto.tigrisdata.v1.DropDatabaseRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDb(value);
      break;
    case 2:
      var value = new proto.tigrisdata.v1.DatabaseOptions;
      reader.readMessage(value,proto.tigrisdata.v1.DatabaseOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.DropDatabaseRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.DropDatabaseRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.DropDatabaseRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DropDatabaseRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDb();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.tigrisdata.v1.DatabaseOptions.serializeBinaryToWriter
    );
  }
};


/**
 * optional string db = 1;
 * @return {string}
 */
proto.tigrisdata.v1.DropDatabaseRequest.prototype.getDb = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.DropDatabaseRequest} returns this
 */
proto.tigrisdata.v1.DropDatabaseRequest.prototype.setDb = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional DatabaseOptions options = 2;
 * @return {?proto.tigrisdata.v1.DatabaseOptions}
 */
proto.tigrisdata.v1.DropDatabaseRequest.prototype.getOptions = function() {
  return /** @type{?proto.tigrisdata.v1.DatabaseOptions} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.DatabaseOptions, 2));
};


/**
 * @param {?proto.tigrisdata.v1.DatabaseOptions|undefined} value
 * @return {!proto.tigrisdata.v1.DropDatabaseRequest} returns this
*/
proto.tigrisdata.v1.DropDatabaseRequest.prototype.setOptions = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.DropDatabaseRequest} returns this
 */
proto.tigrisdata.v1.DropDatabaseRequest.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.DropDatabaseRequest.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.DropDatabaseResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.DropDatabaseResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.DropDatabaseResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DropDatabaseResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.DropDatabaseResponse}
 */
proto.tigrisdata.v1.DropDatabaseResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.DropDatabaseResponse;
  return proto.tigrisdata.v1.DropDatabaseResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.DropDatabaseResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.DropDatabaseResponse}
 */
proto.tigrisdata.v1.DropDatabaseResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.DropDatabaseResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.DropDatabaseResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.DropDatabaseResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DropDatabaseResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.tigrisdata.v1.DropDatabaseResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.DropDatabaseResponse} returns this
 */
proto.tigrisdata.v1.DropDatabaseResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string status = 2;
 * @return {string}
 */
proto.tigrisdata.v1.DropDatabaseResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.DropDatabaseResponse} returns this
 */
proto.tigrisdata.v1.DropDatabaseResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.CreateOrUpdateCollectionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.CreateOrUpdateCollectionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    db: jspb.Message.getFieldWithDefault(msg, 1, ""),
    collection: jspb.Message.getFieldWithDefault(msg, 2, ""),
    schema: msg.getSchema_asB64(),
    onlyCreate: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    options: (f = msg.getOptions()) && proto.tigrisdata.v1.CollectionOptions.toObject(includeInstance, f),
    type: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.CreateOrUpdateCollectionRequest}
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.CreateOrUpdateCollectionRequest;
  return proto.tigrisdata.v1.CreateOrUpdateCollectionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.CreateOrUpdateCollectionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.CreateOrUpdateCollectionRequest}
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDb(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollection(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSchema(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOnlyCreate(value);
      break;
    case 5:
      var value = new proto.tigrisdata.v1.CollectionOptions;
      reader.readMessage(value,proto.tigrisdata.v1.CollectionOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    case 6:
      var value = /** @type {!proto.tigrisdata.v1.CollectionType} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.CreateOrUpdateCollectionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.CreateOrUpdateCollectionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDb();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCollection();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSchema_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getOnlyCreate();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.tigrisdata.v1.CollectionOptions.serializeBinaryToWriter
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
};


/**
 * optional string db = 1;
 * @return {string}
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionRequest.prototype.getDb = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.CreateOrUpdateCollectionRequest} returns this
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionRequest.prototype.setDb = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string collection = 2;
 * @return {string}
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionRequest.prototype.getCollection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.CreateOrUpdateCollectionRequest} returns this
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionRequest.prototype.setCollection = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bytes schema = 3;
 * @return {!(string|Uint8Array)}
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionRequest.prototype.getSchema = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes schema = 3;
 * This is a type-conversion wrapper around `getSchema()`
 * @return {string}
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionRequest.prototype.getSchema_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSchema()));
};


/**
 * optional bytes schema = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSchema()`
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionRequest.prototype.getSchema_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSchema()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.tigrisdata.v1.CreateOrUpdateCollectionRequest} returns this
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionRequest.prototype.setSchema = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional bool only_create = 4;
 * @return {boolean}
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionRequest.prototype.getOnlyCreate = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tigrisdata.v1.CreateOrUpdateCollectionRequest} returns this
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionRequest.prototype.setOnlyCreate = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional CollectionOptions options = 5;
 * @return {?proto.tigrisdata.v1.CollectionOptions}
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionRequest.prototype.getOptions = function() {
  return /** @type{?proto.tigrisdata.v1.CollectionOptions} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.CollectionOptions, 5));
};


/**
 * @param {?proto.tigrisdata.v1.CollectionOptions|undefined} value
 * @return {!proto.tigrisdata.v1.CreateOrUpdateCollectionRequest} returns this
*/
proto.tigrisdata.v1.CreateOrUpdateCollectionRequest.prototype.setOptions = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.CreateOrUpdateCollectionRequest} returns this
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionRequest.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionRequest.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional CollectionType type = 6;
 * @return {!proto.tigrisdata.v1.CollectionType}
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionRequest.prototype.getType = function() {
  return /** @type {!proto.tigrisdata.v1.CollectionType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.tigrisdata.v1.CollectionType} value
 * @return {!proto.tigrisdata.v1.CreateOrUpdateCollectionRequest} returns this
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.CreateOrUpdateCollectionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.CreateOrUpdateCollectionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.CreateOrUpdateCollectionResponse}
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.CreateOrUpdateCollectionResponse;
  return proto.tigrisdata.v1.CreateOrUpdateCollectionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.CreateOrUpdateCollectionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.CreateOrUpdateCollectionResponse}
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.CreateOrUpdateCollectionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.CreateOrUpdateCollectionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.CreateOrUpdateCollectionResponse} returns this
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string status = 2;
 * @return {string}
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.CreateOrUpdateCollectionResponse} returns this
 */
proto.tigrisdata.v1.CreateOrUpdateCollectionResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.DropCollectionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.DropCollectionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.DropCollectionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DropCollectionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    db: jspb.Message.getFieldWithDefault(msg, 1, ""),
    collection: jspb.Message.getFieldWithDefault(msg, 2, ""),
    options: (f = msg.getOptions()) && proto.tigrisdata.v1.CollectionOptions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.DropCollectionRequest}
 */
proto.tigrisdata.v1.DropCollectionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.DropCollectionRequest;
  return proto.tigrisdata.v1.DropCollectionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.DropCollectionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.DropCollectionRequest}
 */
proto.tigrisdata.v1.DropCollectionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDb(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollection(value);
      break;
    case 3:
      var value = new proto.tigrisdata.v1.CollectionOptions;
      reader.readMessage(value,proto.tigrisdata.v1.CollectionOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.DropCollectionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.DropCollectionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.DropCollectionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DropCollectionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDb();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCollection();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.tigrisdata.v1.CollectionOptions.serializeBinaryToWriter
    );
  }
};


/**
 * optional string db = 1;
 * @return {string}
 */
proto.tigrisdata.v1.DropCollectionRequest.prototype.getDb = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.DropCollectionRequest} returns this
 */
proto.tigrisdata.v1.DropCollectionRequest.prototype.setDb = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string collection = 2;
 * @return {string}
 */
proto.tigrisdata.v1.DropCollectionRequest.prototype.getCollection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.DropCollectionRequest} returns this
 */
proto.tigrisdata.v1.DropCollectionRequest.prototype.setCollection = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional CollectionOptions options = 3;
 * @return {?proto.tigrisdata.v1.CollectionOptions}
 */
proto.tigrisdata.v1.DropCollectionRequest.prototype.getOptions = function() {
  return /** @type{?proto.tigrisdata.v1.CollectionOptions} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.CollectionOptions, 3));
};


/**
 * @param {?proto.tigrisdata.v1.CollectionOptions|undefined} value
 * @return {!proto.tigrisdata.v1.DropCollectionRequest} returns this
*/
proto.tigrisdata.v1.DropCollectionRequest.prototype.setOptions = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.DropCollectionRequest} returns this
 */
proto.tigrisdata.v1.DropCollectionRequest.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.DropCollectionRequest.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.DropCollectionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.DropCollectionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.DropCollectionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DropCollectionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: jspb.Message.getFieldWithDefault(msg, 1, ""),
    status: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.DropCollectionResponse}
 */
proto.tigrisdata.v1.DropCollectionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.DropCollectionResponse;
  return proto.tigrisdata.v1.DropCollectionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.DropCollectionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.DropCollectionResponse}
 */
proto.tigrisdata.v1.DropCollectionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.DropCollectionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.DropCollectionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.DropCollectionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DropCollectionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.tigrisdata.v1.DropCollectionResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.DropCollectionResponse} returns this
 */
proto.tigrisdata.v1.DropCollectionResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string status = 2;
 * @return {string}
 */
proto.tigrisdata.v1.DropCollectionResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.DropCollectionResponse} returns this
 */
proto.tigrisdata.v1.DropCollectionResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.DatabaseInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.DatabaseInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.DatabaseInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DatabaseInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    db: jspb.Message.getFieldWithDefault(msg, 1, ""),
    metadata: (f = msg.getMetadata()) && proto.tigrisdata.v1.DatabaseMetadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.DatabaseInfo}
 */
proto.tigrisdata.v1.DatabaseInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.DatabaseInfo;
  return proto.tigrisdata.v1.DatabaseInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.DatabaseInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.DatabaseInfo}
 */
proto.tigrisdata.v1.DatabaseInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDb(value);
      break;
    case 2:
      var value = new proto.tigrisdata.v1.DatabaseMetadata;
      reader.readMessage(value,proto.tigrisdata.v1.DatabaseMetadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.DatabaseInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.DatabaseInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.DatabaseInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DatabaseInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDb();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.tigrisdata.v1.DatabaseMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional string db = 1;
 * @return {string}
 */
proto.tigrisdata.v1.DatabaseInfo.prototype.getDb = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.DatabaseInfo} returns this
 */
proto.tigrisdata.v1.DatabaseInfo.prototype.setDb = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional DatabaseMetadata metadata = 2;
 * @return {?proto.tigrisdata.v1.DatabaseMetadata}
 */
proto.tigrisdata.v1.DatabaseInfo.prototype.getMetadata = function() {
  return /** @type{?proto.tigrisdata.v1.DatabaseMetadata} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.DatabaseMetadata, 2));
};


/**
 * @param {?proto.tigrisdata.v1.DatabaseMetadata|undefined} value
 * @return {!proto.tigrisdata.v1.DatabaseInfo} returns this
*/
proto.tigrisdata.v1.DatabaseInfo.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.DatabaseInfo} returns this
 */
proto.tigrisdata.v1.DatabaseInfo.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.DatabaseInfo.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.CollectionInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.CollectionInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.CollectionInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.CollectionInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    collection: jspb.Message.getFieldWithDefault(msg, 1, ""),
    metadata: (f = msg.getMetadata()) && proto.tigrisdata.v1.CollectionMetadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.CollectionInfo}
 */
proto.tigrisdata.v1.CollectionInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.CollectionInfo;
  return proto.tigrisdata.v1.CollectionInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.CollectionInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.CollectionInfo}
 */
proto.tigrisdata.v1.CollectionInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollection(value);
      break;
    case 2:
      var value = new proto.tigrisdata.v1.CollectionMetadata;
      reader.readMessage(value,proto.tigrisdata.v1.CollectionMetadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.CollectionInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.CollectionInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.CollectionInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.CollectionInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCollection();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.tigrisdata.v1.CollectionMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional string collection = 1;
 * @return {string}
 */
proto.tigrisdata.v1.CollectionInfo.prototype.getCollection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.CollectionInfo} returns this
 */
proto.tigrisdata.v1.CollectionInfo.prototype.setCollection = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional CollectionMetadata metadata = 2;
 * @return {?proto.tigrisdata.v1.CollectionMetadata}
 */
proto.tigrisdata.v1.CollectionInfo.prototype.getMetadata = function() {
  return /** @type{?proto.tigrisdata.v1.CollectionMetadata} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.CollectionMetadata, 2));
};


/**
 * @param {?proto.tigrisdata.v1.CollectionMetadata|undefined} value
 * @return {!proto.tigrisdata.v1.CollectionInfo} returns this
*/
proto.tigrisdata.v1.CollectionInfo.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.CollectionInfo} returns this
 */
proto.tigrisdata.v1.CollectionInfo.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.CollectionInfo.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.ListDatabasesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.ListDatabasesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.ListDatabasesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ListDatabasesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.ListDatabasesRequest}
 */
proto.tigrisdata.v1.ListDatabasesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.ListDatabasesRequest;
  return proto.tigrisdata.v1.ListDatabasesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.ListDatabasesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.ListDatabasesRequest}
 */
proto.tigrisdata.v1.ListDatabasesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.ListDatabasesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.ListDatabasesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.ListDatabasesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ListDatabasesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tigrisdata.v1.ListDatabasesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.ListDatabasesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.ListDatabasesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.ListDatabasesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ListDatabasesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    databasesList: jspb.Message.toObjectList(msg.getDatabasesList(),
    proto.tigrisdata.v1.DatabaseInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.ListDatabasesResponse}
 */
proto.tigrisdata.v1.ListDatabasesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.ListDatabasesResponse;
  return proto.tigrisdata.v1.ListDatabasesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.ListDatabasesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.ListDatabasesResponse}
 */
proto.tigrisdata.v1.ListDatabasesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tigrisdata.v1.DatabaseInfo;
      reader.readMessage(value,proto.tigrisdata.v1.DatabaseInfo.deserializeBinaryFromReader);
      msg.addDatabases(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.ListDatabasesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.ListDatabasesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.ListDatabasesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ListDatabasesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDatabasesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.tigrisdata.v1.DatabaseInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated DatabaseInfo databases = 1;
 * @return {!Array<!proto.tigrisdata.v1.DatabaseInfo>}
 */
proto.tigrisdata.v1.ListDatabasesResponse.prototype.getDatabasesList = function() {
  return /** @type{!Array<!proto.tigrisdata.v1.DatabaseInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tigrisdata.v1.DatabaseInfo, 1));
};


/**
 * @param {!Array<!proto.tigrisdata.v1.DatabaseInfo>} value
 * @return {!proto.tigrisdata.v1.ListDatabasesResponse} returns this
*/
proto.tigrisdata.v1.ListDatabasesResponse.prototype.setDatabasesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.tigrisdata.v1.DatabaseInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tigrisdata.v1.DatabaseInfo}
 */
proto.tigrisdata.v1.ListDatabasesResponse.prototype.addDatabases = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.tigrisdata.v1.DatabaseInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tigrisdata.v1.ListDatabasesResponse} returns this
 */
proto.tigrisdata.v1.ListDatabasesResponse.prototype.clearDatabasesList = function() {
  return this.setDatabasesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.ListCollectionsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.ListCollectionsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.ListCollectionsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ListCollectionsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    db: jspb.Message.getFieldWithDefault(msg, 1, ""),
    options: (f = msg.getOptions()) && proto.tigrisdata.v1.CollectionOptions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.ListCollectionsRequest}
 */
proto.tigrisdata.v1.ListCollectionsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.ListCollectionsRequest;
  return proto.tigrisdata.v1.ListCollectionsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.ListCollectionsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.ListCollectionsRequest}
 */
proto.tigrisdata.v1.ListCollectionsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDb(value);
      break;
    case 2:
      var value = new proto.tigrisdata.v1.CollectionOptions;
      reader.readMessage(value,proto.tigrisdata.v1.CollectionOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.ListCollectionsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.ListCollectionsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.ListCollectionsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ListCollectionsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDb();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.tigrisdata.v1.CollectionOptions.serializeBinaryToWriter
    );
  }
};


/**
 * optional string db = 1;
 * @return {string}
 */
proto.tigrisdata.v1.ListCollectionsRequest.prototype.getDb = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.ListCollectionsRequest} returns this
 */
proto.tigrisdata.v1.ListCollectionsRequest.prototype.setDb = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional CollectionOptions options = 2;
 * @return {?proto.tigrisdata.v1.CollectionOptions}
 */
proto.tigrisdata.v1.ListCollectionsRequest.prototype.getOptions = function() {
  return /** @type{?proto.tigrisdata.v1.CollectionOptions} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.CollectionOptions, 2));
};


/**
 * @param {?proto.tigrisdata.v1.CollectionOptions|undefined} value
 * @return {!proto.tigrisdata.v1.ListCollectionsRequest} returns this
*/
proto.tigrisdata.v1.ListCollectionsRequest.prototype.setOptions = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.ListCollectionsRequest} returns this
 */
proto.tigrisdata.v1.ListCollectionsRequest.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.ListCollectionsRequest.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tigrisdata.v1.ListCollectionsResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.ListCollectionsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.ListCollectionsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.ListCollectionsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ListCollectionsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    db: jspb.Message.getFieldWithDefault(msg, 1, ""),
    collectionsList: jspb.Message.toObjectList(msg.getCollectionsList(),
    proto.tigrisdata.v1.CollectionInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.ListCollectionsResponse}
 */
proto.tigrisdata.v1.ListCollectionsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.ListCollectionsResponse;
  return proto.tigrisdata.v1.ListCollectionsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.ListCollectionsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.ListCollectionsResponse}
 */
proto.tigrisdata.v1.ListCollectionsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDb(value);
      break;
    case 2:
      var value = new proto.tigrisdata.v1.CollectionInfo;
      reader.readMessage(value,proto.tigrisdata.v1.CollectionInfo.deserializeBinaryFromReader);
      msg.addCollections(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.ListCollectionsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.ListCollectionsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.ListCollectionsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.ListCollectionsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDb();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCollectionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.tigrisdata.v1.CollectionInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional string db = 1;
 * @return {string}
 */
proto.tigrisdata.v1.ListCollectionsResponse.prototype.getDb = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.ListCollectionsResponse} returns this
 */
proto.tigrisdata.v1.ListCollectionsResponse.prototype.setDb = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated CollectionInfo collections = 2;
 * @return {!Array<!proto.tigrisdata.v1.CollectionInfo>}
 */
proto.tigrisdata.v1.ListCollectionsResponse.prototype.getCollectionsList = function() {
  return /** @type{!Array<!proto.tigrisdata.v1.CollectionInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tigrisdata.v1.CollectionInfo, 2));
};


/**
 * @param {!Array<!proto.tigrisdata.v1.CollectionInfo>} value
 * @return {!proto.tigrisdata.v1.ListCollectionsResponse} returns this
*/
proto.tigrisdata.v1.ListCollectionsResponse.prototype.setCollectionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.tigrisdata.v1.CollectionInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tigrisdata.v1.CollectionInfo}
 */
proto.tigrisdata.v1.ListCollectionsResponse.prototype.addCollections = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.tigrisdata.v1.CollectionInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tigrisdata.v1.ListCollectionsResponse} returns this
 */
proto.tigrisdata.v1.ListCollectionsResponse.prototype.clearCollectionsList = function() {
  return this.setCollectionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.DescribeDatabaseRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.DescribeDatabaseRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.DescribeDatabaseRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DescribeDatabaseRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    db: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.DescribeDatabaseRequest}
 */
proto.tigrisdata.v1.DescribeDatabaseRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.DescribeDatabaseRequest;
  return proto.tigrisdata.v1.DescribeDatabaseRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.DescribeDatabaseRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.DescribeDatabaseRequest}
 */
proto.tigrisdata.v1.DescribeDatabaseRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDb(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.DescribeDatabaseRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.DescribeDatabaseRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.DescribeDatabaseRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DescribeDatabaseRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDb();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string db = 1;
 * @return {string}
 */
proto.tigrisdata.v1.DescribeDatabaseRequest.prototype.getDb = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.DescribeDatabaseRequest} returns this
 */
proto.tigrisdata.v1.DescribeDatabaseRequest.prototype.setDb = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.DescribeCollectionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.DescribeCollectionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.DescribeCollectionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DescribeCollectionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    db: jspb.Message.getFieldWithDefault(msg, 1, ""),
    collection: jspb.Message.getFieldWithDefault(msg, 2, ""),
    options: (f = msg.getOptions()) && proto.tigrisdata.v1.CollectionOptions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.DescribeCollectionRequest}
 */
proto.tigrisdata.v1.DescribeCollectionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.DescribeCollectionRequest;
  return proto.tigrisdata.v1.DescribeCollectionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.DescribeCollectionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.DescribeCollectionRequest}
 */
proto.tigrisdata.v1.DescribeCollectionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDb(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollection(value);
      break;
    case 3:
      var value = new proto.tigrisdata.v1.CollectionOptions;
      reader.readMessage(value,proto.tigrisdata.v1.CollectionOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.DescribeCollectionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.DescribeCollectionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.DescribeCollectionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DescribeCollectionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDb();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCollection();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.tigrisdata.v1.CollectionOptions.serializeBinaryToWriter
    );
  }
};


/**
 * optional string db = 1;
 * @return {string}
 */
proto.tigrisdata.v1.DescribeCollectionRequest.prototype.getDb = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.DescribeCollectionRequest} returns this
 */
proto.tigrisdata.v1.DescribeCollectionRequest.prototype.setDb = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string collection = 2;
 * @return {string}
 */
proto.tigrisdata.v1.DescribeCollectionRequest.prototype.getCollection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.DescribeCollectionRequest} returns this
 */
proto.tigrisdata.v1.DescribeCollectionRequest.prototype.setCollection = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional CollectionOptions options = 3;
 * @return {?proto.tigrisdata.v1.CollectionOptions}
 */
proto.tigrisdata.v1.DescribeCollectionRequest.prototype.getOptions = function() {
  return /** @type{?proto.tigrisdata.v1.CollectionOptions} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.CollectionOptions, 3));
};


/**
 * @param {?proto.tigrisdata.v1.CollectionOptions|undefined} value
 * @return {!proto.tigrisdata.v1.DescribeCollectionRequest} returns this
*/
proto.tigrisdata.v1.DescribeCollectionRequest.prototype.setOptions = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.DescribeCollectionRequest} returns this
 */
proto.tigrisdata.v1.DescribeCollectionRequest.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.DescribeCollectionRequest.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tigrisdata.v1.DescribeDatabaseResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.DescribeDatabaseResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.DescribeDatabaseResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.DescribeDatabaseResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DescribeDatabaseResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    db: jspb.Message.getFieldWithDefault(msg, 1, ""),
    metadata: (f = msg.getMetadata()) && proto.tigrisdata.v1.DatabaseMetadata.toObject(includeInstance, f),
    collectionsList: jspb.Message.toObjectList(msg.getCollectionsList(),
    proto.tigrisdata.v1.CollectionDescription.toObject, includeInstance),
    size: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.DescribeDatabaseResponse}
 */
proto.tigrisdata.v1.DescribeDatabaseResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.DescribeDatabaseResponse;
  return proto.tigrisdata.v1.DescribeDatabaseResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.DescribeDatabaseResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.DescribeDatabaseResponse}
 */
proto.tigrisdata.v1.DescribeDatabaseResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDb(value);
      break;
    case 2:
      var value = new proto.tigrisdata.v1.DatabaseMetadata;
      reader.readMessage(value,proto.tigrisdata.v1.DatabaseMetadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 3:
      var value = new proto.tigrisdata.v1.CollectionDescription;
      reader.readMessage(value,proto.tigrisdata.v1.CollectionDescription.deserializeBinaryFromReader);
      msg.addCollections(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.DescribeDatabaseResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.DescribeDatabaseResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.DescribeDatabaseResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DescribeDatabaseResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDb();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.tigrisdata.v1.DatabaseMetadata.serializeBinaryToWriter
    );
  }
  f = message.getCollectionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.tigrisdata.v1.CollectionDescription.serializeBinaryToWriter
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
};


/**
 * optional string db = 1;
 * @return {string}
 */
proto.tigrisdata.v1.DescribeDatabaseResponse.prototype.getDb = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.DescribeDatabaseResponse} returns this
 */
proto.tigrisdata.v1.DescribeDatabaseResponse.prototype.setDb = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional DatabaseMetadata metadata = 2;
 * @return {?proto.tigrisdata.v1.DatabaseMetadata}
 */
proto.tigrisdata.v1.DescribeDatabaseResponse.prototype.getMetadata = function() {
  return /** @type{?proto.tigrisdata.v1.DatabaseMetadata} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.DatabaseMetadata, 2));
};


/**
 * @param {?proto.tigrisdata.v1.DatabaseMetadata|undefined} value
 * @return {!proto.tigrisdata.v1.DescribeDatabaseResponse} returns this
*/
proto.tigrisdata.v1.DescribeDatabaseResponse.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.DescribeDatabaseResponse} returns this
 */
proto.tigrisdata.v1.DescribeDatabaseResponse.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.DescribeDatabaseResponse.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated CollectionDescription collections = 3;
 * @return {!Array<!proto.tigrisdata.v1.CollectionDescription>}
 */
proto.tigrisdata.v1.DescribeDatabaseResponse.prototype.getCollectionsList = function() {
  return /** @type{!Array<!proto.tigrisdata.v1.CollectionDescription>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.tigrisdata.v1.CollectionDescription, 3));
};


/**
 * @param {!Array<!proto.tigrisdata.v1.CollectionDescription>} value
 * @return {!proto.tigrisdata.v1.DescribeDatabaseResponse} returns this
*/
proto.tigrisdata.v1.DescribeDatabaseResponse.prototype.setCollectionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.tigrisdata.v1.CollectionDescription=} opt_value
 * @param {number=} opt_index
 * @return {!proto.tigrisdata.v1.CollectionDescription}
 */
proto.tigrisdata.v1.DescribeDatabaseResponse.prototype.addCollections = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.tigrisdata.v1.CollectionDescription, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tigrisdata.v1.DescribeDatabaseResponse} returns this
 */
proto.tigrisdata.v1.DescribeDatabaseResponse.prototype.clearCollectionsList = function() {
  return this.setCollectionsList([]);
};


/**
 * optional int64 size = 4;
 * @return {number}
 */
proto.tigrisdata.v1.DescribeDatabaseResponse.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.tigrisdata.v1.DescribeDatabaseResponse} returns this
 */
proto.tigrisdata.v1.DescribeDatabaseResponse.prototype.setSize = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.DescribeCollectionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.DescribeCollectionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.DescribeCollectionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DescribeCollectionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    collection: jspb.Message.getFieldWithDefault(msg, 1, ""),
    metadata: (f = msg.getMetadata()) && proto.tigrisdata.v1.CollectionMetadata.toObject(includeInstance, f),
    schema: msg.getSchema_asB64(),
    size: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.DescribeCollectionResponse}
 */
proto.tigrisdata.v1.DescribeCollectionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.DescribeCollectionResponse;
  return proto.tigrisdata.v1.DescribeCollectionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.DescribeCollectionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.DescribeCollectionResponse}
 */
proto.tigrisdata.v1.DescribeCollectionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollection(value);
      break;
    case 2:
      var value = new proto.tigrisdata.v1.CollectionMetadata;
      reader.readMessage(value,proto.tigrisdata.v1.CollectionMetadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSchema(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.DescribeCollectionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.DescribeCollectionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.DescribeCollectionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DescribeCollectionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCollection();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.tigrisdata.v1.CollectionMetadata.serializeBinaryToWriter
    );
  }
  f = message.getSchema_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
};


/**
 * optional string collection = 1;
 * @return {string}
 */
proto.tigrisdata.v1.DescribeCollectionResponse.prototype.getCollection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.DescribeCollectionResponse} returns this
 */
proto.tigrisdata.v1.DescribeCollectionResponse.prototype.setCollection = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional CollectionMetadata metadata = 2;
 * @return {?proto.tigrisdata.v1.CollectionMetadata}
 */
proto.tigrisdata.v1.DescribeCollectionResponse.prototype.getMetadata = function() {
  return /** @type{?proto.tigrisdata.v1.CollectionMetadata} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.CollectionMetadata, 2));
};


/**
 * @param {?proto.tigrisdata.v1.CollectionMetadata|undefined} value
 * @return {!proto.tigrisdata.v1.DescribeCollectionResponse} returns this
*/
proto.tigrisdata.v1.DescribeCollectionResponse.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.DescribeCollectionResponse} returns this
 */
proto.tigrisdata.v1.DescribeCollectionResponse.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.DescribeCollectionResponse.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bytes schema = 3;
 * @return {!(string|Uint8Array)}
 */
proto.tigrisdata.v1.DescribeCollectionResponse.prototype.getSchema = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes schema = 3;
 * This is a type-conversion wrapper around `getSchema()`
 * @return {string}
 */
proto.tigrisdata.v1.DescribeCollectionResponse.prototype.getSchema_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSchema()));
};


/**
 * optional bytes schema = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSchema()`
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.DescribeCollectionResponse.prototype.getSchema_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSchema()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.tigrisdata.v1.DescribeCollectionResponse} returns this
 */
proto.tigrisdata.v1.DescribeCollectionResponse.prototype.setSchema = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional int64 size = 4;
 * @return {number}
 */
proto.tigrisdata.v1.DescribeCollectionResponse.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.tigrisdata.v1.DescribeCollectionResponse} returns this
 */
proto.tigrisdata.v1.DescribeCollectionResponse.prototype.setSize = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.DatabaseDescription.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.DatabaseDescription.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.DatabaseDescription} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DatabaseDescription.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.DatabaseDescription}
 */
proto.tigrisdata.v1.DatabaseDescription.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.DatabaseDescription;
  return proto.tigrisdata.v1.DatabaseDescription.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.DatabaseDescription} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.DatabaseDescription}
 */
proto.tigrisdata.v1.DatabaseDescription.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.DatabaseDescription.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.DatabaseDescription.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.DatabaseDescription} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DatabaseDescription.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.CollectionDescription.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.CollectionDescription.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.CollectionDescription} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.CollectionDescription.toObject = function(includeInstance, msg) {
  var f, obj = {
    collection: jspb.Message.getFieldWithDefault(msg, 1, ""),
    metadata: (f = msg.getMetadata()) && proto.tigrisdata.v1.CollectionMetadata.toObject(includeInstance, f),
    schema: msg.getSchema_asB64(),
    size: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.CollectionDescription}
 */
proto.tigrisdata.v1.CollectionDescription.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.CollectionDescription;
  return proto.tigrisdata.v1.CollectionDescription.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.CollectionDescription} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.CollectionDescription}
 */
proto.tigrisdata.v1.CollectionDescription.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollection(value);
      break;
    case 2:
      var value = new proto.tigrisdata.v1.CollectionMetadata;
      reader.readMessage(value,proto.tigrisdata.v1.CollectionMetadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSchema(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.CollectionDescription.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.CollectionDescription.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.CollectionDescription} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.CollectionDescription.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCollection();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.tigrisdata.v1.CollectionMetadata.serializeBinaryToWriter
    );
  }
  f = message.getSchema_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
};


/**
 * optional string collection = 1;
 * @return {string}
 */
proto.tigrisdata.v1.CollectionDescription.prototype.getCollection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.CollectionDescription} returns this
 */
proto.tigrisdata.v1.CollectionDescription.prototype.setCollection = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional CollectionMetadata metadata = 2;
 * @return {?proto.tigrisdata.v1.CollectionMetadata}
 */
proto.tigrisdata.v1.CollectionDescription.prototype.getMetadata = function() {
  return /** @type{?proto.tigrisdata.v1.CollectionMetadata} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.CollectionMetadata, 2));
};


/**
 * @param {?proto.tigrisdata.v1.CollectionMetadata|undefined} value
 * @return {!proto.tigrisdata.v1.CollectionDescription} returns this
*/
proto.tigrisdata.v1.CollectionDescription.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.CollectionDescription} returns this
 */
proto.tigrisdata.v1.CollectionDescription.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.CollectionDescription.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bytes schema = 3;
 * @return {!(string|Uint8Array)}
 */
proto.tigrisdata.v1.CollectionDescription.prototype.getSchema = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes schema = 3;
 * This is a type-conversion wrapper around `getSchema()`
 * @return {string}
 */
proto.tigrisdata.v1.CollectionDescription.prototype.getSchema_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSchema()));
};


/**
 * optional bytes schema = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSchema()`
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.CollectionDescription.prototype.getSchema_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSchema()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.tigrisdata.v1.CollectionDescription} returns this
 */
proto.tigrisdata.v1.CollectionDescription.prototype.setSchema = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional int64 size = 4;
 * @return {number}
 */
proto.tigrisdata.v1.CollectionDescription.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.tigrisdata.v1.CollectionDescription} returns this
 */
proto.tigrisdata.v1.CollectionDescription.prototype.setSize = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.DatabaseMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.DatabaseMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.DatabaseMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DatabaseMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.DatabaseMetadata}
 */
proto.tigrisdata.v1.DatabaseMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.DatabaseMetadata;
  return proto.tigrisdata.v1.DatabaseMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.DatabaseMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.DatabaseMetadata}
 */
proto.tigrisdata.v1.DatabaseMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.DatabaseMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.DatabaseMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.DatabaseMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.DatabaseMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.CollectionMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.CollectionMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.CollectionMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.CollectionMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.CollectionMetadata}
 */
proto.tigrisdata.v1.CollectionMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.CollectionMetadata;
  return proto.tigrisdata.v1.CollectionMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.CollectionMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.CollectionMetadata}
 */
proto.tigrisdata.v1.CollectionMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.tigrisdata.v1.CollectionType} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.CollectionMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.CollectionMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.CollectionMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.CollectionMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional CollectionType type = 1;
 * @return {!proto.tigrisdata.v1.CollectionType}
 */
proto.tigrisdata.v1.CollectionMetadata.prototype.getType = function() {
  return /** @type {!proto.tigrisdata.v1.CollectionType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.tigrisdata.v1.CollectionType} value
 * @return {!proto.tigrisdata.v1.CollectionMetadata} returns this
 */
proto.tigrisdata.v1.CollectionMetadata.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.EventsRequestOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.EventsRequestOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.EventsRequestOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.EventsRequestOptions.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.EventsRequestOptions}
 */
proto.tigrisdata.v1.EventsRequestOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.EventsRequestOptions;
  return proto.tigrisdata.v1.EventsRequestOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.EventsRequestOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.EventsRequestOptions}
 */
proto.tigrisdata.v1.EventsRequestOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.EventsRequestOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.EventsRequestOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.EventsRequestOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.EventsRequestOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.EventsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.EventsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.EventsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.EventsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    db: jspb.Message.getFieldWithDefault(msg, 1, ""),
    collection: jspb.Message.getFieldWithDefault(msg, 2, ""),
    options: (f = msg.getOptions()) && proto.tigrisdata.v1.EventsRequestOptions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.EventsRequest}
 */
proto.tigrisdata.v1.EventsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.EventsRequest;
  return proto.tigrisdata.v1.EventsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.EventsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.EventsRequest}
 */
proto.tigrisdata.v1.EventsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDb(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollection(value);
      break;
    case 3:
      var value = new proto.tigrisdata.v1.EventsRequestOptions;
      reader.readMessage(value,proto.tigrisdata.v1.EventsRequestOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.EventsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.EventsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.EventsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.EventsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDb();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCollection();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.tigrisdata.v1.EventsRequestOptions.serializeBinaryToWriter
    );
  }
};


/**
 * optional string db = 1;
 * @return {string}
 */
proto.tigrisdata.v1.EventsRequest.prototype.getDb = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.EventsRequest} returns this
 */
proto.tigrisdata.v1.EventsRequest.prototype.setDb = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string collection = 2;
 * @return {string}
 */
proto.tigrisdata.v1.EventsRequest.prototype.getCollection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.EventsRequest} returns this
 */
proto.tigrisdata.v1.EventsRequest.prototype.setCollection = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional EventsRequestOptions options = 3;
 * @return {?proto.tigrisdata.v1.EventsRequestOptions}
 */
proto.tigrisdata.v1.EventsRequest.prototype.getOptions = function() {
  return /** @type{?proto.tigrisdata.v1.EventsRequestOptions} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.EventsRequestOptions, 3));
};


/**
 * @param {?proto.tigrisdata.v1.EventsRequestOptions|undefined} value
 * @return {!proto.tigrisdata.v1.EventsRequest} returns this
*/
proto.tigrisdata.v1.EventsRequest.prototype.setOptions = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.EventsRequest} returns this
 */
proto.tigrisdata.v1.EventsRequest.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.EventsRequest.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.EventsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.EventsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.EventsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.EventsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    event: (f = msg.getEvent()) && proto.tigrisdata.v1.StreamEvent.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.EventsResponse}
 */
proto.tigrisdata.v1.EventsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.EventsResponse;
  return proto.tigrisdata.v1.EventsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.EventsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.EventsResponse}
 */
proto.tigrisdata.v1.EventsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tigrisdata.v1.StreamEvent;
      reader.readMessage(value,proto.tigrisdata.v1.StreamEvent.deserializeBinaryFromReader);
      msg.setEvent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.EventsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.EventsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.EventsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.EventsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEvent();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.tigrisdata.v1.StreamEvent.serializeBinaryToWriter
    );
  }
};


/**
 * optional StreamEvent event = 1;
 * @return {?proto.tigrisdata.v1.StreamEvent}
 */
proto.tigrisdata.v1.EventsResponse.prototype.getEvent = function() {
  return /** @type{?proto.tigrisdata.v1.StreamEvent} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.StreamEvent, 1));
};


/**
 * @param {?proto.tigrisdata.v1.StreamEvent|undefined} value
 * @return {!proto.tigrisdata.v1.EventsResponse} returns this
*/
proto.tigrisdata.v1.EventsResponse.prototype.setEvent = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.EventsResponse} returns this
 */
proto.tigrisdata.v1.EventsResponse.prototype.clearEvent = function() {
  return this.setEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.EventsResponse.prototype.hasEvent = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.StreamEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.StreamEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.StreamEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.StreamEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    txId: msg.getTxId_asB64(),
    collection: jspb.Message.getFieldWithDefault(msg, 2, ""),
    op: jspb.Message.getFieldWithDefault(msg, 3, ""),
    key: msg.getKey_asB64(),
    lkey: msg.getLkey_asB64(),
    rkey: msg.getRkey_asB64(),
    data: msg.getData_asB64(),
    last: jspb.Message.getBooleanFieldWithDefault(msg, 8, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.StreamEvent}
 */
proto.tigrisdata.v1.StreamEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.StreamEvent;
  return proto.tigrisdata.v1.StreamEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.StreamEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.StreamEvent}
 */
proto.tigrisdata.v1.StreamEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollection(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOp(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setKey(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setLkey(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setRkey(value);
      break;
    case 7:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLast(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.StreamEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.StreamEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.StreamEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.StreamEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTxId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getCollection();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOp();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getKey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getLkey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      5,
      f
    );
  }
  f = message.getRkey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      7,
      f
    );
  }
  f = message.getLast();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
};


/**
 * optional bytes tx_id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.tigrisdata.v1.StreamEvent.prototype.getTxId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes tx_id = 1;
 * This is a type-conversion wrapper around `getTxId()`
 * @return {string}
 */
proto.tigrisdata.v1.StreamEvent.prototype.getTxId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxId()));
};


/**
 * optional bytes tx_id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxId()`
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.StreamEvent.prototype.getTxId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.tigrisdata.v1.StreamEvent} returns this
 */
proto.tigrisdata.v1.StreamEvent.prototype.setTxId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional string collection = 2;
 * @return {string}
 */
proto.tigrisdata.v1.StreamEvent.prototype.getCollection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.StreamEvent} returns this
 */
proto.tigrisdata.v1.StreamEvent.prototype.setCollection = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string op = 3;
 * @return {string}
 */
proto.tigrisdata.v1.StreamEvent.prototype.getOp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.StreamEvent} returns this
 */
proto.tigrisdata.v1.StreamEvent.prototype.setOp = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bytes key = 4;
 * @return {!(string|Uint8Array)}
 */
proto.tigrisdata.v1.StreamEvent.prototype.getKey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes key = 4;
 * This is a type-conversion wrapper around `getKey()`
 * @return {string}
 */
proto.tigrisdata.v1.StreamEvent.prototype.getKey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getKey()));
};


/**
 * optional bytes key = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getKey()`
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.StreamEvent.prototype.getKey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getKey()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.tigrisdata.v1.StreamEvent} returns this
 */
proto.tigrisdata.v1.StreamEvent.prototype.setKey = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional bytes lkey = 5;
 * @return {!(string|Uint8Array)}
 */
proto.tigrisdata.v1.StreamEvent.prototype.getLkey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes lkey = 5;
 * This is a type-conversion wrapper around `getLkey()`
 * @return {string}
 */
proto.tigrisdata.v1.StreamEvent.prototype.getLkey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getLkey()));
};


/**
 * optional bytes lkey = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getLkey()`
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.StreamEvent.prototype.getLkey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getLkey()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.tigrisdata.v1.StreamEvent} returns this
 */
proto.tigrisdata.v1.StreamEvent.prototype.setLkey = function(value) {
  return jspb.Message.setProto3BytesField(this, 5, value);
};


/**
 * optional bytes rkey = 6;
 * @return {!(string|Uint8Array)}
 */
proto.tigrisdata.v1.StreamEvent.prototype.getRkey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes rkey = 6;
 * This is a type-conversion wrapper around `getRkey()`
 * @return {string}
 */
proto.tigrisdata.v1.StreamEvent.prototype.getRkey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getRkey()));
};


/**
 * optional bytes rkey = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getRkey()`
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.StreamEvent.prototype.getRkey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getRkey()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.tigrisdata.v1.StreamEvent} returns this
 */
proto.tigrisdata.v1.StreamEvent.prototype.setRkey = function(value) {
  return jspb.Message.setProto3BytesField(this, 6, value);
};


/**
 * optional bytes data = 7;
 * @return {!(string|Uint8Array)}
 */
proto.tigrisdata.v1.StreamEvent.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * optional bytes data = 7;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.tigrisdata.v1.StreamEvent.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 7;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.StreamEvent.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.tigrisdata.v1.StreamEvent} returns this
 */
proto.tigrisdata.v1.StreamEvent.prototype.setData = function(value) {
  return jspb.Message.setProto3BytesField(this, 7, value);
};


/**
 * optional bool last = 8;
 * @return {boolean}
 */
proto.tigrisdata.v1.StreamEvent.prototype.getLast = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.tigrisdata.v1.StreamEvent} returns this
 */
proto.tigrisdata.v1.StreamEvent.prototype.setLast = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.GetInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.GetInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.GetInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.GetInfoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.GetInfoRequest}
 */
proto.tigrisdata.v1.GetInfoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.GetInfoRequest;
  return proto.tigrisdata.v1.GetInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.GetInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.GetInfoRequest}
 */
proto.tigrisdata.v1.GetInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.GetInfoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.GetInfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.GetInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.GetInfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.GetInfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.GetInfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.GetInfoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.GetInfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    serverVersion: jspb.Message.getFieldWithDefault(msg, 1, ""),
    error: (f = msg.getError()) && proto.tigrisdata.v1.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.GetInfoResponse}
 */
proto.tigrisdata.v1.GetInfoResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.GetInfoResponse;
  return proto.tigrisdata.v1.GetInfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.GetInfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.GetInfoResponse}
 */
proto.tigrisdata.v1.GetInfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setServerVersion(value);
      break;
    case 2:
      var value = new proto.tigrisdata.v1.Error;
      reader.readMessage(value,proto.tigrisdata.v1.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.GetInfoResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.GetInfoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.GetInfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.GetInfoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getServerVersion();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.tigrisdata.v1.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional string server_version = 1;
 * @return {string}
 */
proto.tigrisdata.v1.GetInfoResponse.prototype.getServerVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.GetInfoResponse} returns this
 */
proto.tigrisdata.v1.GetInfoResponse.prototype.setServerVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Error error = 2;
 * @return {?proto.tigrisdata.v1.Error}
 */
proto.tigrisdata.v1.GetInfoResponse.prototype.getError = function() {
  return /** @type{?proto.tigrisdata.v1.Error} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.Error, 2));
};


/**
 * @param {?proto.tigrisdata.v1.Error|undefined} value
 * @return {!proto.tigrisdata.v1.GetInfoResponse} returns this
*/
proto.tigrisdata.v1.GetInfoResponse.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.GetInfoResponse} returns this
 */
proto.tigrisdata.v1.GetInfoResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.GetInfoResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.PublishRequestOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.PublishRequestOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.PublishRequestOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.PublishRequestOptions.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.PublishRequestOptions}
 */
proto.tigrisdata.v1.PublishRequestOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.PublishRequestOptions;
  return proto.tigrisdata.v1.PublishRequestOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.PublishRequestOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.PublishRequestOptions}
 */
proto.tigrisdata.v1.PublishRequestOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.PublishRequestOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.PublishRequestOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.PublishRequestOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.PublishRequestOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tigrisdata.v1.PublishRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.PublishRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.PublishRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.PublishRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.PublishRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    db: jspb.Message.getFieldWithDefault(msg, 1, ""),
    collection: jspb.Message.getFieldWithDefault(msg, 2, ""),
    messagesList: msg.getMessagesList_asB64(),
    options: (f = msg.getOptions()) && proto.tigrisdata.v1.PublishRequestOptions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.PublishRequest}
 */
proto.tigrisdata.v1.PublishRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.PublishRequest;
  return proto.tigrisdata.v1.PublishRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.PublishRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.PublishRequest}
 */
proto.tigrisdata.v1.PublishRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDb(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollection(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addMessages(value);
      break;
    case 4:
      var value = new proto.tigrisdata.v1.PublishRequestOptions;
      reader.readMessage(value,proto.tigrisdata.v1.PublishRequestOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.PublishRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.PublishRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.PublishRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.PublishRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDb();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCollection();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMessagesList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      3,
      f
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.tigrisdata.v1.PublishRequestOptions.serializeBinaryToWriter
    );
  }
};


/**
 * optional string db = 1;
 * @return {string}
 */
proto.tigrisdata.v1.PublishRequest.prototype.getDb = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.PublishRequest} returns this
 */
proto.tigrisdata.v1.PublishRequest.prototype.setDb = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string collection = 2;
 * @return {string}
 */
proto.tigrisdata.v1.PublishRequest.prototype.getCollection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.PublishRequest} returns this
 */
proto.tigrisdata.v1.PublishRequest.prototype.setCollection = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated bytes messages = 3;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.tigrisdata.v1.PublishRequest.prototype.getMessagesList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * repeated bytes messages = 3;
 * This is a type-conversion wrapper around `getMessagesList()`
 * @return {!Array<string>}
 */
proto.tigrisdata.v1.PublishRequest.prototype.getMessagesList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getMessagesList()));
};


/**
 * repeated bytes messages = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMessagesList()`
 * @return {!Array<!Uint8Array>}
 */
proto.tigrisdata.v1.PublishRequest.prototype.getMessagesList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getMessagesList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.tigrisdata.v1.PublishRequest} returns this
 */
proto.tigrisdata.v1.PublishRequest.prototype.setMessagesList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.tigrisdata.v1.PublishRequest} returns this
 */
proto.tigrisdata.v1.PublishRequest.prototype.addMessages = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tigrisdata.v1.PublishRequest} returns this
 */
proto.tigrisdata.v1.PublishRequest.prototype.clearMessagesList = function() {
  return this.setMessagesList([]);
};


/**
 * optional PublishRequestOptions options = 4;
 * @return {?proto.tigrisdata.v1.PublishRequestOptions}
 */
proto.tigrisdata.v1.PublishRequest.prototype.getOptions = function() {
  return /** @type{?proto.tigrisdata.v1.PublishRequestOptions} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.PublishRequestOptions, 4));
};


/**
 * @param {?proto.tigrisdata.v1.PublishRequestOptions|undefined} value
 * @return {!proto.tigrisdata.v1.PublishRequest} returns this
*/
proto.tigrisdata.v1.PublishRequest.prototype.setOptions = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.PublishRequest} returns this
 */
proto.tigrisdata.v1.PublishRequest.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.PublishRequest.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.tigrisdata.v1.PublishResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.PublishResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.PublishResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.PublishResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.PublishResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    metadata: (f = msg.getMetadata()) && proto.tigrisdata.v1.ResponseMetadata.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 2, ""),
    keysList: msg.getKeysList_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.PublishResponse}
 */
proto.tigrisdata.v1.PublishResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.PublishResponse;
  return proto.tigrisdata.v1.PublishResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.PublishResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.PublishResponse}
 */
proto.tigrisdata.v1.PublishResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.tigrisdata.v1.ResponseMetadata;
      reader.readMessage(value,proto.tigrisdata.v1.ResponseMetadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addKeys(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.PublishResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.PublishResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.PublishResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.PublishResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.tigrisdata.v1.ResponseMetadata.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getKeysList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      3,
      f
    );
  }
};


/**
 * optional ResponseMetadata metadata = 1;
 * @return {?proto.tigrisdata.v1.ResponseMetadata}
 */
proto.tigrisdata.v1.PublishResponse.prototype.getMetadata = function() {
  return /** @type{?proto.tigrisdata.v1.ResponseMetadata} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.ResponseMetadata, 1));
};


/**
 * @param {?proto.tigrisdata.v1.ResponseMetadata|undefined} value
 * @return {!proto.tigrisdata.v1.PublishResponse} returns this
*/
proto.tigrisdata.v1.PublishResponse.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.PublishResponse} returns this
 */
proto.tigrisdata.v1.PublishResponse.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.PublishResponse.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string status = 2;
 * @return {string}
 */
proto.tigrisdata.v1.PublishResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.PublishResponse} returns this
 */
proto.tigrisdata.v1.PublishResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated bytes keys = 3;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.tigrisdata.v1.PublishResponse.prototype.getKeysList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * repeated bytes keys = 3;
 * This is a type-conversion wrapper around `getKeysList()`
 * @return {!Array<string>}
 */
proto.tigrisdata.v1.PublishResponse.prototype.getKeysList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getKeysList()));
};


/**
 * repeated bytes keys = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getKeysList()`
 * @return {!Array<!Uint8Array>}
 */
proto.tigrisdata.v1.PublishResponse.prototype.getKeysList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getKeysList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.tigrisdata.v1.PublishResponse} returns this
 */
proto.tigrisdata.v1.PublishResponse.prototype.setKeysList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.tigrisdata.v1.PublishResponse} returns this
 */
proto.tigrisdata.v1.PublishResponse.prototype.addKeys = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.tigrisdata.v1.PublishResponse} returns this
 */
proto.tigrisdata.v1.PublishResponse.prototype.clearKeysList = function() {
  return this.setKeysList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.SubscribeRequestOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.SubscribeRequestOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.SubscribeRequestOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.SubscribeRequestOptions.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.SubscribeRequestOptions}
 */
proto.tigrisdata.v1.SubscribeRequestOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.SubscribeRequestOptions;
  return proto.tigrisdata.v1.SubscribeRequestOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.SubscribeRequestOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.SubscribeRequestOptions}
 */
proto.tigrisdata.v1.SubscribeRequestOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.SubscribeRequestOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.SubscribeRequestOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.SubscribeRequestOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.SubscribeRequestOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.SubscribeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.SubscribeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.SubscribeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.SubscribeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    db: jspb.Message.getFieldWithDefault(msg, 1, ""),
    collection: jspb.Message.getFieldWithDefault(msg, 2, ""),
    options: (f = msg.getOptions()) && proto.tigrisdata.v1.SubscribeRequestOptions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.SubscribeRequest}
 */
proto.tigrisdata.v1.SubscribeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.SubscribeRequest;
  return proto.tigrisdata.v1.SubscribeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.SubscribeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.SubscribeRequest}
 */
proto.tigrisdata.v1.SubscribeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDb(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCollection(value);
      break;
    case 3:
      var value = new proto.tigrisdata.v1.SubscribeRequestOptions;
      reader.readMessage(value,proto.tigrisdata.v1.SubscribeRequestOptions.deserializeBinaryFromReader);
      msg.setOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.SubscribeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.SubscribeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.SubscribeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.SubscribeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDb();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCollection();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOptions();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.tigrisdata.v1.SubscribeRequestOptions.serializeBinaryToWriter
    );
  }
};


/**
 * optional string db = 1;
 * @return {string}
 */
proto.tigrisdata.v1.SubscribeRequest.prototype.getDb = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.SubscribeRequest} returns this
 */
proto.tigrisdata.v1.SubscribeRequest.prototype.setDb = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string collection = 2;
 * @return {string}
 */
proto.tigrisdata.v1.SubscribeRequest.prototype.getCollection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.tigrisdata.v1.SubscribeRequest} returns this
 */
proto.tigrisdata.v1.SubscribeRequest.prototype.setCollection = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional SubscribeRequestOptions options = 3;
 * @return {?proto.tigrisdata.v1.SubscribeRequestOptions}
 */
proto.tigrisdata.v1.SubscribeRequest.prototype.getOptions = function() {
  return /** @type{?proto.tigrisdata.v1.SubscribeRequestOptions} */ (
    jspb.Message.getWrapperField(this, proto.tigrisdata.v1.SubscribeRequestOptions, 3));
};


/**
 * @param {?proto.tigrisdata.v1.SubscribeRequestOptions|undefined} value
 * @return {!proto.tigrisdata.v1.SubscribeRequest} returns this
*/
proto.tigrisdata.v1.SubscribeRequest.prototype.setOptions = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.tigrisdata.v1.SubscribeRequest} returns this
 */
proto.tigrisdata.v1.SubscribeRequest.prototype.clearOptions = function() {
  return this.setOptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.tigrisdata.v1.SubscribeRequest.prototype.hasOptions = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.tigrisdata.v1.SubscribeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.tigrisdata.v1.SubscribeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.tigrisdata.v1.SubscribeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.SubscribeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    message: msg.getMessage_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.tigrisdata.v1.SubscribeResponse}
 */
proto.tigrisdata.v1.SubscribeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.tigrisdata.v1.SubscribeResponse;
  return proto.tigrisdata.v1.SubscribeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.tigrisdata.v1.SubscribeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.tigrisdata.v1.SubscribeResponse}
 */
proto.tigrisdata.v1.SubscribeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.SubscribeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.tigrisdata.v1.SubscribeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.tigrisdata.v1.SubscribeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.tigrisdata.v1.SubscribeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessage_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes message = 1;
 * @return {!(string|Uint8Array)}
 */
proto.tigrisdata.v1.SubscribeResponse.prototype.getMessage = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes message = 1;
 * This is a type-conversion wrapper around `getMessage()`
 * @return {string}
 */
proto.tigrisdata.v1.SubscribeResponse.prototype.getMessage_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getMessage()));
};


/**
 * optional bytes message = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMessage()`
 * @return {!Uint8Array}
 */
proto.tigrisdata.v1.SubscribeResponse.prototype.getMessage_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getMessage()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.tigrisdata.v1.SubscribeResponse} returns this
 */
proto.tigrisdata.v1.SubscribeResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * @enum {number}
 */
proto.tigrisdata.v1.Code = {
  OK: 0,
  CANCELLED: 1,
  UNKNOWN: 2,
  INVALID_ARGUMENT: 3,
  DEADLINE_EXCEEDED: 4,
  NOT_FOUND: 5,
  ALREADY_EXISTS: 6,
  PERMISSION_DENIED: 7,
  RESOURCE_EXHAUSTED: 8,
  FAILED_PRECONDITION: 9,
  ABORTED: 10,
  OUT_OF_RANGE: 11,
  UNIMPLEMENTED: 12,
  INTERNAL: 13,
  UNAVAILABLE: 14,
  DATA_LOSS: 15,
  UNAUTHENTICATED: 16,
  CONFLICT: 17,
  BAD_GATEWAY: 18,
  METHOD_NOT_ALLOWED: 19
};

/**
 * @enum {number}
 */
proto.tigrisdata.v1.CollectionType = {
  DOCUMENTS: 0,
  MESSAGES: 1
};

goog.object.extend(exports, proto.tigrisdata.v1);
